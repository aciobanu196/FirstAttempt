10:05:27.521 [main] DEBUG slick.compiler.QueryCompiler - Source:
| Bind
|   from s2: Filter s3
|     from s3: Join Inner
|       left s4: TableExpansion
|         table s6: Table PRODUCTS
|         columns: TypeMapping
|           0: ProductNode
|             1: Path s6.PRODUCT_ID : Int'
|             2: Path s6.PRODUCT_NAME : String'
|             3: Path s6.PRODUCT_PRICE : Float'
|             4: Path s6.PRODUCT_TYPE : String'
|             5: Path s6.PRODUCT_QUANTITY : Int'
|             6: Path s6.IS_DELETED : Boolean'
|             7: Path s6.CART_PRODUCT_ID : Int'
|       right s5: TableExpansion
|         table s7: Table CART
|         columns: TypeMapping
|           0: ProductNode
|             1: Path s7.CART_ID : Int'
|             2: Path s7.CART_PRODUCT_QUANTITY : Int'
|             3: Path s7.CART_PRODUCT_STATUS : String'
|             4: Path s7.CART_USER_ID : Int'
|             5: Path s7.CART_TOTAL : Float'
|       on: Apply Function =
|         0: Path s4.CART_PRODUCT_ID : Int'
|         1: Path s5.CART_ID : Int'
|     where: Apply Function >=
|       0: Path s3._1.PRODUCT_QUANTITY : Int'
|       1: Path s3._2.CART_PRODUCT_QUANTITY : Int'
|   select: Pure t8
|     value: Path s2._2.CART_PRODUCT_STATUS : String'

10:05:27.537 [main] DEBUG slick.compiler.AssignUniqueSymbols - Detected features: UsedFeatures(false,true,false,false)
10:05:27.547 [main] DEBUG slick.compiler.QueryCompiler - After phase assignUniqueSymbols:
| Bind
|   from s9: Filter s10
|     from s10: Join Inner
|       left s11: TableExpansion
|         table s13: Table PRODUCTS
|         columns: TypeMapping
|           0: ProductNode
|             1: Path s13.PRODUCT_ID : Int'
|             2: Path s13.PRODUCT_NAME : String'
|             3: Path s13.PRODUCT_PRICE : Float'
|             4: Path s13.PRODUCT_TYPE : String'
|             5: Path s13.PRODUCT_QUANTITY : Int'
|             6: Path s13.IS_DELETED : Boolean'
|             7: Path s13.CART_PRODUCT_ID : Int'
|       right s12: TableExpansion
|         table s15: Table CART
|         columns: TypeMapping
|           0: ProductNode
|             1: Path s15.CART_ID : Int'
|             2: Path s15.CART_PRODUCT_QUANTITY : Int'
|             3: Path s15.CART_PRODUCT_STATUS : String'
|             4: Path s15.CART_USER_ID : Int'
|             5: Path s15.CART_TOTAL : Float'
|       on: Apply Function =
|         0: Path s11.CART_PRODUCT_ID : Int'
|         1: Path s12.CART_ID : Int'
|     where: Apply Function >=
|       0: Path s10._1.PRODUCT_QUANTITY : Int'
|       1: Path s10._2.CART_PRODUCT_QUANTITY : Int'
|   select: Pure t17
|     value: Path s9._2.CART_PRODUCT_STATUS : String'

10:05:27.550 [main] DEBUG slick.compiler.QueryCompiler - After phase unrollTailBinds: (no change)
10:05:27.559 [main] DEBUG slick.compiler.QueryCompiler - After phase inferTypes: (no change)
10:05:27.573 [main] DEBUG slick.compiler.ExpandTables - Found Selects for NominalTypes: @(slick.jdbc.MySQLProfile$._.CART), @(slick.jdbc.MySQLProfile$._.PRODUCTS)
10:05:27.584 [main] DEBUG slick.compiler.ExpandTables - With correct table types:
| Bind : Vector[t17<String'>]
|   from s9: Filter s10 : Vector[(@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>, @t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>)]
|     from s10: Join Inner : Vector[(@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>, @t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>)]
|       left s11: Table PRODUCTS : Vector[@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]
|       right s12: Table CART : Vector[@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]
|       on: Apply Function = : Boolean
|         0: Path s11.CART_PRODUCT_ID : Int'
|         1: Path s12.CART_ID : Int'
|     where: Apply Function >= : Boolean
|       0: Path s10._1.PRODUCT_QUANTITY : Int'
|       1: Path s10._2.CART_PRODUCT_QUANTITY : Int'
|   select: Pure t17 : Vector[t17<String'>]
|     value: Path s9._2.CART_PRODUCT_STATUS : String'

10:05:27.586 [main] DEBUG slick.compiler.ExpandTables - Table expansions: @t16 -> (s15,TypeMapping), @t14 -> (s13,TypeMapping)
10:05:27.591 [main] DEBUG slick.compiler.QueryCompiler - After phase expandTables:
| Bind : Vector[t17<String'>]
|   from s9: Filter s10 : Vector[(@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>, @t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>)]
|     from s10: Join Inner : Vector[(@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>, @t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>)]
|       left s11: Table PRODUCTS : Vector[@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]
|       right s12: Table CART : Vector[@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]
|       on: Apply Function = : Boolean
|         0: Path s11.CART_PRODUCT_ID : Int'
|         1: Path s12.CART_ID : Int'
|     where: Apply Function >= : Boolean
|       0: Path s10._1.PRODUCT_QUANTITY : Int'
|       1: Path s10._2.CART_PRODUCT_QUANTITY : Int'
|   select: Pure t17 : Vector[t17<String'>]
|     value: Path s9._2.CART_PRODUCT_STATUS : String'

10:05:27.595 [main] DEBUG slick.compiler.ForceOuterBinds - Introducing new Bind s18 for Table PRODUCTS
10:05:27.596 [main] DEBUG slick.compiler.ForceOuterBinds - Introducing new Bind s19 for Table CART
10:05:27.596 [main] DEBUG slick.compiler.ForceOuterBinds - Introducing new Bind s20 for Join Inner
10:05:27.603 [main] DEBUG slick.compiler.QueryCompiler - After phase forceOuterBinds:
| Bind : Vector[t17<String'>]
|   from s9: Filter s10 : Vector[t21<(t22<@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>>, t23<@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>>)>]
|     from s10: Bind : Vector[t21<(t22<@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>>, t23<@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>>)>]
|       from s20: Join Inner : Vector[(t22<@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>>, t23<@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>>)]
|         left s11: Bind : Vector[t22<@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>>]
|           from s18: Table PRODUCTS : Vector[@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]
|           select: Pure t22 : Vector[t22<@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>>]
|             value: Ref s18 : @t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>
|         right s12: Bind : Vector[t23<@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>>]
|           from s19: Table CART : Vector[@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]
|           select: Pure t23 : Vector[t23<@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>>]
|             value: Ref s19 : @t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>
|         on: Apply Function = : Boolean
|           0: Path s11.CART_PRODUCT_ID : Int'
|           1: Path s12.CART_ID : Int'
|       select: Pure t21 : Vector[t21<(t22<@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>>, t23<@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>>)>]
|         value: Ref s20 : (t22<@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>>, t23<@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>>)
|     where: Apply Function >= : Boolean
|       0: Path s10._1.PRODUCT_QUANTITY : Int'
|       1: Path s10._2.CART_PRODUCT_QUANTITY : Int'
|   select: Pure t17 : Vector[t17<String'>]
|     value: Path s9._2.CART_PRODUCT_STATUS : String'

10:05:27.607 [main] DEBUG slick.compiler.QueryCompiler - After phase removeMappedTypes: (no change)
10:05:27.608 [main] DEBUG slick.compiler.QueryCompiler - After phase expandSums: (no change)
10:05:27.611 [main] DEBUG slick.compiler.QueryCompiler - After phase emulateOuterJoins: (no change)
10:05:27.636 [main] DEBUG slick.compiler.QueryCompiler - After phase expandRecords:
| Bind : Vector[t17<String'>]
|   from s9: Filter s10 : Vector[t21<({PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}, {CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'})>]
|     from s10: Bind : Vector[t21<({PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}, {CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'})>]
|       from s20: Join Inner : Vector[(t22<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>, t23<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>)]
|         left s11: Bind : Vector[t22<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]
|           from s18: Table PRODUCTS : Vector[@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]
|           select: Pure t22 : Vector[t22<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]
|             value: StructNode : {PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}
|               PRODUCT_NAME: Path s18.PRODUCT_NAME : String'
|               CART_PRODUCT_ID: Path s18.CART_PRODUCT_ID : Int'
|               PRODUCT_QUANTITY: Path s18.PRODUCT_QUANTITY : Int'
|               IS_DELETED: Path s18.IS_DELETED : Boolean'
|               PRODUCT_TYPE: Path s18.PRODUCT_TYPE : String'
|               PRODUCT_ID: Path s18.PRODUCT_ID : Int'
|               PRODUCT_PRICE: Path s18.PRODUCT_PRICE : Float'
|         right s12: Bind : Vector[t23<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]
|           from s19: Table CART : Vector[@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]
|           select: Pure t23 : Vector[t23<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]
|             value: StructNode : {CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}
|               CART_ID: Path s19.CART_ID : Int'
|               CART_PRODUCT_STATUS: Path s19.CART_PRODUCT_STATUS : String'
|               CART_TOTAL: Path s19.CART_TOTAL : Float'
|               CART_PRODUCT_QUANTITY: Path s19.CART_PRODUCT_QUANTITY : Int'
|               CART_USER_ID: Path s19.CART_USER_ID : Int'
|         on: Apply Function = : Boolean
|           0: Path s11.CART_PRODUCT_ID : Int'
|           1: Path s12.CART_ID : Int'
|       select: Pure t21 : Vector[t21<({PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}, {CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'})>]
|         value: ProductNode : ({PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}, {CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'})
|           1: StructNode : {PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}
|             PRODUCT_NAME: Path s20._1.PRODUCT_NAME : String'
|             CART_PRODUCT_ID: Path s20._1.CART_PRODUCT_ID : Int'
|             PRODUCT_QUANTITY: Path s20._1.PRODUCT_QUANTITY : Int'
|             IS_DELETED: Path s20._1.IS_DELETED : Boolean'
|             PRODUCT_TYPE: Path s20._1.PRODUCT_TYPE : String'
|             PRODUCT_ID: Path s20._1.PRODUCT_ID : Int'
|             PRODUCT_PRICE: Path s20._1.PRODUCT_PRICE : Float'
|           2: StructNode : {CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}
|             CART_ID: Path s20._2.CART_ID : Int'
|             CART_PRODUCT_STATUS: Path s20._2.CART_PRODUCT_STATUS : String'
|             CART_TOTAL: Path s20._2.CART_TOTAL : Float'
|             CART_PRODUCT_QUANTITY: Path s20._2.CART_PRODUCT_QUANTITY : Int'
|             CART_USER_ID: Path s20._2.CART_USER_ID : Int'
|     where: Apply Function >= : Boolean
|       0: Path s10._1.PRODUCT_QUANTITY : Int'
|       1: Path s10._2.CART_PRODUCT_QUANTITY : Int'
|   select: Pure t17 : Vector[t17<String'>]
|     value: Path s9._2.CART_PRODUCT_STATUS : String'

10:05:27.640 [main] DEBUG slick.compiler.FlattenProjections - Flattening projection t22
10:05:27.642 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s18.PRODUCT_NAME with symbols 
| Path s18.PRODUCT_NAME : String'

10:05:27.643 [main] DEBUG slick.compiler.FlattenProjections - Translated s18.PRODUCT_NAME to:
| Path s18.PRODUCT_NAME

10:05:27.643 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s18.CART_PRODUCT_ID with symbols 
| Path s18.CART_PRODUCT_ID : Int'

10:05:27.643 [main] DEBUG slick.compiler.FlattenProjections - Translated s18.CART_PRODUCT_ID to:
| Path s18.CART_PRODUCT_ID

10:05:27.644 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s18.PRODUCT_QUANTITY with symbols 
| Path s18.PRODUCT_QUANTITY : Int'

10:05:27.644 [main] DEBUG slick.compiler.FlattenProjections - Translated s18.PRODUCT_QUANTITY to:
| Path s18.PRODUCT_QUANTITY

10:05:27.644 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s18.IS_DELETED with symbols 
| Path s18.IS_DELETED : Boolean'

10:05:27.644 [main] DEBUG slick.compiler.FlattenProjections - Translated s18.IS_DELETED to:
| Path s18.IS_DELETED

10:05:27.645 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s18.PRODUCT_TYPE with symbols 
| Path s18.PRODUCT_TYPE : String'

10:05:27.645 [main] DEBUG slick.compiler.FlattenProjections - Translated s18.PRODUCT_TYPE to:
| Path s18.PRODUCT_TYPE

10:05:27.645 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s18.PRODUCT_ID with symbols 
| Path s18.PRODUCT_ID : Int'

10:05:27.645 [main] DEBUG slick.compiler.FlattenProjections - Translated s18.PRODUCT_ID to:
| Path s18.PRODUCT_ID

10:05:27.645 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s18.PRODUCT_PRICE with symbols 
| Path s18.PRODUCT_PRICE : Float'

10:05:27.646 [main] DEBUG slick.compiler.FlattenProjections - Translated s18.PRODUCT_PRICE to:
| Path s18.PRODUCT_PRICE

10:05:27.660 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path 
| StructNode
|   PRODUCT_NAME: Path s18.PRODUCT_NAME
|   CART_PRODUCT_ID: Path s18.CART_PRODUCT_ID
|   PRODUCT_QUANTITY: Path s18.PRODUCT_QUANTITY
|   IS_DELETED: Path s18.IS_DELETED
|   PRODUCT_TYPE: Path s18.PRODUCT_TYPE
|   PRODUCT_ID: Path s18.PRODUCT_ID
|   PRODUCT_PRICE: Path s18.PRODUCT_PRICE

10:05:27.662 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path PRODUCT_NAME
| Path s18.PRODUCT_NAME

10:05:27.663 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s24 -> Path s18.PRODUCT_NAME
10:05:27.664 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path CART_PRODUCT_ID
| Path s18.CART_PRODUCT_ID

10:05:27.664 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s25 -> Path s18.CART_PRODUCT_ID
10:05:27.664 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path PRODUCT_QUANTITY
| Path s18.PRODUCT_QUANTITY

10:05:27.664 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s26 -> Path s18.PRODUCT_QUANTITY
10:05:27.665 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path IS_DELETED
| Path s18.IS_DELETED

10:05:27.665 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s27 -> Path s18.IS_DELETED
10:05:27.665 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path PRODUCT_TYPE
| Path s18.PRODUCT_TYPE

10:05:27.665 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s28 -> Path s18.PRODUCT_TYPE
10:05:27.665 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path PRODUCT_ID
| Path s18.PRODUCT_ID

10:05:27.665 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s29 -> Path s18.PRODUCT_ID
10:05:27.666 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path PRODUCT_PRICE
| Path s18.PRODUCT_PRICE

10:05:27.666 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s30 -> Path s18.PRODUCT_PRICE
10:05:27.669 [main] DEBUG slick.compiler.FlattenProjections - Adding translation for t22: (HashMap(List(CART_PRODUCT_ID) -> s25, List(PRODUCT_ID) -> s29, List(PRODUCT_PRICE) -> s30, List(PRODUCT_NAME) -> s24, List(IS_DELETED) -> s27, List(PRODUCT_QUANTITY) -> s26, List(PRODUCT_TYPE) -> s28), UnassignedType)
10:05:27.671 [main] DEBUG slick.compiler.FlattenProjections - Flattened projection to
| Pure t22
|   value: StructNode
|     s24: Path s18.PRODUCT_NAME
|     s25: Path s18.CART_PRODUCT_ID
|     s26: Path s18.PRODUCT_QUANTITY
|     s27: Path s18.IS_DELETED
|     s28: Path s18.PRODUCT_TYPE
|     s29: Path s18.PRODUCT_ID
|     s30: Path s18.PRODUCT_PRICE

10:05:27.671 [main] DEBUG slick.compiler.FlattenProjections - Flattening projection t23
10:05:27.672 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s19.CART_ID with symbols t22
| Path s19.CART_ID : Int'

10:05:27.672 [main] DEBUG slick.compiler.FlattenProjections - Translated s19.CART_ID to:
| Path s19.CART_ID

10:05:27.673 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s19.CART_PRODUCT_STATUS with symbols t22
| Path s19.CART_PRODUCT_STATUS : String'

10:05:27.673 [main] DEBUG slick.compiler.FlattenProjections - Translated s19.CART_PRODUCT_STATUS to:
| Path s19.CART_PRODUCT_STATUS

10:05:27.673 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s19.CART_TOTAL with symbols t22
| Path s19.CART_TOTAL : Float'

10:05:27.673 [main] DEBUG slick.compiler.FlattenProjections - Translated s19.CART_TOTAL to:
| Path s19.CART_TOTAL

10:05:27.673 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s19.CART_PRODUCT_QUANTITY with symbols t22
| Path s19.CART_PRODUCT_QUANTITY : Int'

10:05:27.673 [main] DEBUG slick.compiler.FlattenProjections - Translated s19.CART_PRODUCT_QUANTITY to:
| Path s19.CART_PRODUCT_QUANTITY

10:05:27.674 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s19.CART_USER_ID with symbols t22
| Path s19.CART_USER_ID : Int'

10:05:27.674 [main] DEBUG slick.compiler.FlattenProjections - Translated s19.CART_USER_ID to:
| Path s19.CART_USER_ID

10:05:27.675 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path 
| StructNode
|   CART_ID: Path s19.CART_ID
|   CART_PRODUCT_STATUS: Path s19.CART_PRODUCT_STATUS
|   CART_TOTAL: Path s19.CART_TOTAL
|   CART_PRODUCT_QUANTITY: Path s19.CART_PRODUCT_QUANTITY
|   CART_USER_ID: Path s19.CART_USER_ID

10:05:27.675 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path CART_ID
| Path s19.CART_ID

10:05:27.675 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s31 -> Path s19.CART_ID
10:05:27.675 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path CART_PRODUCT_STATUS
| Path s19.CART_PRODUCT_STATUS

10:05:27.675 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s32 -> Path s19.CART_PRODUCT_STATUS
10:05:27.676 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path CART_TOTAL
| Path s19.CART_TOTAL

10:05:27.676 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s33 -> Path s19.CART_TOTAL
10:05:27.676 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path CART_PRODUCT_QUANTITY
| Path s19.CART_PRODUCT_QUANTITY

10:05:27.676 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s34 -> Path s19.CART_PRODUCT_QUANTITY
10:05:27.676 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path CART_USER_ID
| Path s19.CART_USER_ID

10:05:27.676 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s35 -> Path s19.CART_USER_ID
10:05:27.677 [main] DEBUG slick.compiler.FlattenProjections - Adding translation for t23: (HashMap(List(CART_PRODUCT_STATUS) -> s32, List(CART_USER_ID) -> s35, List(CART_TOTAL) -> s33, List(CART_ID) -> s31, List(CART_PRODUCT_QUANTITY) -> s34), UnassignedType)
10:05:27.678 [main] DEBUG slick.compiler.FlattenProjections - Flattened projection to
| Pure t23
|   value: StructNode
|     s31: Path s19.CART_ID
|     s32: Path s19.CART_PRODUCT_STATUS
|     s33: Path s19.CART_TOTAL
|     s34: Path s19.CART_PRODUCT_QUANTITY
|     s35: Path s19.CART_USER_ID

10:05:27.678 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s11.CART_PRODUCT_ID with symbols t23, t22
| Path s11.CART_PRODUCT_ID : Int'

10:05:27.679 [main] DEBUG slick.compiler.FlattenProjections - Found s11.CART_PRODUCT_ID with local part Path CART_PRODUCT_ID over t22
10:05:27.680 [main] DEBUG slick.compiler.FlattenProjections -   Translation for t22: HashMap(List(CART_PRODUCT_ID) -> s25, List(PRODUCT_ID) -> s29, List(PRODUCT_PRICE) -> s30, List(PRODUCT_NAME) -> s24, List(IS_DELETED) -> s27, List(PRODUCT_QUANTITY) -> s26, List(PRODUCT_TYPE) -> s28)
10:05:27.680 [main] DEBUG slick.compiler.FlattenProjections - Translated s11.CART_PRODUCT_ID to:
| Path s11.s25

10:05:27.680 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s12.CART_ID with symbols t23, t22
| Path s12.CART_ID : Int'

10:05:27.680 [main] DEBUG slick.compiler.FlattenProjections - Found s12.CART_ID with local part Path CART_ID over t23
10:05:27.681 [main] DEBUG slick.compiler.FlattenProjections -   Translation for t23: HashMap(List(CART_PRODUCT_STATUS) -> s32, List(CART_USER_ID) -> s35, List(CART_TOTAL) -> s33, List(CART_ID) -> s31, List(CART_PRODUCT_QUANTITY) -> s34)
10:05:27.681 [main] DEBUG slick.compiler.FlattenProjections - Translated s12.CART_ID to:
| Path s12.s31

10:05:27.681 [main] DEBUG slick.compiler.FlattenProjections - Flattening projection t21
10:05:27.681 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s20._1.PRODUCT_NAME with symbols t23, t22
| Path s20._1.PRODUCT_NAME : String'

10:05:27.681 [main] DEBUG slick.compiler.FlattenProjections - Found s20._1.PRODUCT_NAME with local part Path PRODUCT_NAME over t22
10:05:27.681 [main] DEBUG slick.compiler.FlattenProjections -   Translation for t22: HashMap(List(CART_PRODUCT_ID) -> s25, List(PRODUCT_ID) -> s29, List(PRODUCT_PRICE) -> s30, List(PRODUCT_NAME) -> s24, List(IS_DELETED) -> s27, List(PRODUCT_QUANTITY) -> s26, List(PRODUCT_TYPE) -> s28)
10:05:27.682 [main] DEBUG slick.compiler.FlattenProjections - Translated s20._1.PRODUCT_NAME to:
| Path s20._1.s24

10:05:27.682 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s20._1.CART_PRODUCT_ID with symbols t23, t22
| Path s20._1.CART_PRODUCT_ID : Int'

10:05:27.682 [main] DEBUG slick.compiler.FlattenProjections - Found s20._1.CART_PRODUCT_ID with local part Path CART_PRODUCT_ID over t22
10:05:27.682 [main] DEBUG slick.compiler.FlattenProjections -   Translation for t22: HashMap(List(CART_PRODUCT_ID) -> s25, List(PRODUCT_ID) -> s29, List(PRODUCT_PRICE) -> s30, List(PRODUCT_NAME) -> s24, List(IS_DELETED) -> s27, List(PRODUCT_QUANTITY) -> s26, List(PRODUCT_TYPE) -> s28)
10:05:27.682 [main] DEBUG slick.compiler.FlattenProjections - Translated s20._1.CART_PRODUCT_ID to:
| Path s20._1.s25

10:05:27.683 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s20._1.PRODUCT_QUANTITY with symbols t23, t22
| Path s20._1.PRODUCT_QUANTITY : Int'

10:05:27.683 [main] DEBUG slick.compiler.FlattenProjections - Found s20._1.PRODUCT_QUANTITY with local part Path PRODUCT_QUANTITY over t22
10:05:27.683 [main] DEBUG slick.compiler.FlattenProjections -   Translation for t22: HashMap(List(CART_PRODUCT_ID) -> s25, List(PRODUCT_ID) -> s29, List(PRODUCT_PRICE) -> s30, List(PRODUCT_NAME) -> s24, List(IS_DELETED) -> s27, List(PRODUCT_QUANTITY) -> s26, List(PRODUCT_TYPE) -> s28)
10:05:27.683 [main] DEBUG slick.compiler.FlattenProjections - Translated s20._1.PRODUCT_QUANTITY to:
| Path s20._1.s26

10:05:27.683 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s20._1.IS_DELETED with symbols t23, t22
| Path s20._1.IS_DELETED : Boolean'

10:05:27.683 [main] DEBUG slick.compiler.FlattenProjections - Found s20._1.IS_DELETED with local part Path IS_DELETED over t22
10:05:27.684 [main] DEBUG slick.compiler.FlattenProjections -   Translation for t22: HashMap(List(CART_PRODUCT_ID) -> s25, List(PRODUCT_ID) -> s29, List(PRODUCT_PRICE) -> s30, List(PRODUCT_NAME) -> s24, List(IS_DELETED) -> s27, List(PRODUCT_QUANTITY) -> s26, List(PRODUCT_TYPE) -> s28)
10:05:27.684 [main] DEBUG slick.compiler.FlattenProjections - Translated s20._1.IS_DELETED to:
| Path s20._1.s27

10:05:27.684 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s20._1.PRODUCT_TYPE with symbols t23, t22
| Path s20._1.PRODUCT_TYPE : String'

10:05:27.684 [main] DEBUG slick.compiler.FlattenProjections - Found s20._1.PRODUCT_TYPE with local part Path PRODUCT_TYPE over t22
10:05:27.684 [main] DEBUG slick.compiler.FlattenProjections -   Translation for t22: HashMap(List(CART_PRODUCT_ID) -> s25, List(PRODUCT_ID) -> s29, List(PRODUCT_PRICE) -> s30, List(PRODUCT_NAME) -> s24, List(IS_DELETED) -> s27, List(PRODUCT_QUANTITY) -> s26, List(PRODUCT_TYPE) -> s28)
10:05:27.685 [main] DEBUG slick.compiler.FlattenProjections - Translated s20._1.PRODUCT_TYPE to:
| Path s20._1.s28

10:05:27.685 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s20._1.PRODUCT_ID with symbols t23, t22
| Path s20._1.PRODUCT_ID : Int'

10:05:27.685 [main] DEBUG slick.compiler.FlattenProjections - Found s20._1.PRODUCT_ID with local part Path PRODUCT_ID over t22
10:05:27.685 [main] DEBUG slick.compiler.FlattenProjections -   Translation for t22: HashMap(List(CART_PRODUCT_ID) -> s25, List(PRODUCT_ID) -> s29, List(PRODUCT_PRICE) -> s30, List(PRODUCT_NAME) -> s24, List(IS_DELETED) -> s27, List(PRODUCT_QUANTITY) -> s26, List(PRODUCT_TYPE) -> s28)
10:05:27.686 [main] DEBUG slick.compiler.FlattenProjections - Translated s20._1.PRODUCT_ID to:
| Path s20._1.s29

10:05:27.686 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s20._1.PRODUCT_PRICE with symbols t23, t22
| Path s20._1.PRODUCT_PRICE : Float'

10:05:27.686 [main] DEBUG slick.compiler.FlattenProjections - Found s20._1.PRODUCT_PRICE with local part Path PRODUCT_PRICE over t22
10:05:27.686 [main] DEBUG slick.compiler.FlattenProjections -   Translation for t22: HashMap(List(CART_PRODUCT_ID) -> s25, List(PRODUCT_ID) -> s29, List(PRODUCT_PRICE) -> s30, List(PRODUCT_NAME) -> s24, List(IS_DELETED) -> s27, List(PRODUCT_QUANTITY) -> s26, List(PRODUCT_TYPE) -> s28)
10:05:27.686 [main] DEBUG slick.compiler.FlattenProjections - Translated s20._1.PRODUCT_PRICE to:
| Path s20._1.s30

10:05:27.687 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s20._2.CART_ID with symbols t23, t22
| Path s20._2.CART_ID : Int'

10:05:27.687 [main] DEBUG slick.compiler.FlattenProjections - Found s20._2.CART_ID with local part Path CART_ID over t23
10:05:27.687 [main] DEBUG slick.compiler.FlattenProjections -   Translation for t23: HashMap(List(CART_PRODUCT_STATUS) -> s32, List(CART_USER_ID) -> s35, List(CART_TOTAL) -> s33, List(CART_ID) -> s31, List(CART_PRODUCT_QUANTITY) -> s34)
10:05:27.687 [main] DEBUG slick.compiler.FlattenProjections - Translated s20._2.CART_ID to:
| Path s20._2.s31

10:05:27.687 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s20._2.CART_PRODUCT_STATUS with symbols t23, t22
| Path s20._2.CART_PRODUCT_STATUS : String'

10:05:27.687 [main] DEBUG slick.compiler.FlattenProjections - Found s20._2.CART_PRODUCT_STATUS with local part Path CART_PRODUCT_STATUS over t23
10:05:27.688 [main] DEBUG slick.compiler.FlattenProjections -   Translation for t23: HashMap(List(CART_PRODUCT_STATUS) -> s32, List(CART_USER_ID) -> s35, List(CART_TOTAL) -> s33, List(CART_ID) -> s31, List(CART_PRODUCT_QUANTITY) -> s34)
10:05:27.688 [main] DEBUG slick.compiler.FlattenProjections - Translated s20._2.CART_PRODUCT_STATUS to:
| Path s20._2.s32

10:05:27.688 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s20._2.CART_TOTAL with symbols t23, t22
| Path s20._2.CART_TOTAL : Float'

10:05:27.688 [main] DEBUG slick.compiler.FlattenProjections - Found s20._2.CART_TOTAL with local part Path CART_TOTAL over t23
10:05:27.688 [main] DEBUG slick.compiler.FlattenProjections -   Translation for t23: HashMap(List(CART_PRODUCT_STATUS) -> s32, List(CART_USER_ID) -> s35, List(CART_TOTAL) -> s33, List(CART_ID) -> s31, List(CART_PRODUCT_QUANTITY) -> s34)
10:05:27.688 [main] DEBUG slick.compiler.FlattenProjections - Translated s20._2.CART_TOTAL to:
| Path s20._2.s33

10:05:27.689 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s20._2.CART_PRODUCT_QUANTITY with symbols t23, t22
| Path s20._2.CART_PRODUCT_QUANTITY : Int'

10:05:27.689 [main] DEBUG slick.compiler.FlattenProjections - Found s20._2.CART_PRODUCT_QUANTITY with local part Path CART_PRODUCT_QUANTITY over t23
10:05:27.689 [main] DEBUG slick.compiler.FlattenProjections -   Translation for t23: HashMap(List(CART_PRODUCT_STATUS) -> s32, List(CART_USER_ID) -> s35, List(CART_TOTAL) -> s33, List(CART_ID) -> s31, List(CART_PRODUCT_QUANTITY) -> s34)
10:05:27.689 [main] DEBUG slick.compiler.FlattenProjections - Translated s20._2.CART_PRODUCT_QUANTITY to:
| Path s20._2.s34

10:05:27.689 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s20._2.CART_USER_ID with symbols t23, t22
| Path s20._2.CART_USER_ID : Int'

10:05:27.690 [main] DEBUG slick.compiler.FlattenProjections - Found s20._2.CART_USER_ID with local part Path CART_USER_ID over t23
10:05:27.690 [main] DEBUG slick.compiler.FlattenProjections -   Translation for t23: HashMap(List(CART_PRODUCT_STATUS) -> s32, List(CART_USER_ID) -> s35, List(CART_TOTAL) -> s33, List(CART_ID) -> s31, List(CART_PRODUCT_QUANTITY) -> s34)
10:05:27.690 [main] DEBUG slick.compiler.FlattenProjections - Translated s20._2.CART_USER_ID to:
| Path s20._2.s35

10:05:27.693 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path 
| ProductNode
|   1: StructNode
|     PRODUCT_NAME: Path s20._1.s24
|     CART_PRODUCT_ID: Path s20._1.s25
|     PRODUCT_QUANTITY: Path s20._1.s26
|     IS_DELETED: Path s20._1.s27
|     PRODUCT_TYPE: Path s20._1.s28
|     PRODUCT_ID: Path s20._1.s29
|     PRODUCT_PRICE: Path s20._1.s30
|   2: StructNode
|     CART_ID: Path s20._2.s31
|     CART_PRODUCT_STATUS: Path s20._2.s32
|     CART_TOTAL: Path s20._2.s33
|     CART_PRODUCT_QUANTITY: Path s20._2.s34
|     CART_USER_ID: Path s20._2.s35

10:05:27.695 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path _1
| StructNode
|   PRODUCT_NAME: Path s20._1.s24
|   CART_PRODUCT_ID: Path s20._1.s25
|   PRODUCT_QUANTITY: Path s20._1.s26
|   IS_DELETED: Path s20._1.s27
|   PRODUCT_TYPE: Path s20._1.s28
|   PRODUCT_ID: Path s20._1.s29
|   PRODUCT_PRICE: Path s20._1.s30

10:05:27.695 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path _1.PRODUCT_NAME
| Path s20._1.s24

10:05:27.695 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s36 -> Path s20._1.s24
10:05:27.696 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path _1.CART_PRODUCT_ID
| Path s20._1.s25

10:05:27.696 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s37 -> Path s20._1.s25
10:05:27.696 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path _1.PRODUCT_QUANTITY
| Path s20._1.s26

10:05:27.696 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s38 -> Path s20._1.s26
10:05:27.696 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path _1.IS_DELETED
| Path s20._1.s27

10:05:27.696 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s39 -> Path s20._1.s27
10:05:27.697 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path _1.PRODUCT_TYPE
| Path s20._1.s28

10:05:27.697 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s40 -> Path s20._1.s28
10:05:27.697 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path _1.PRODUCT_ID
| Path s20._1.s29

10:05:27.697 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s41 -> Path s20._1.s29
10:05:27.697 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path _1.PRODUCT_PRICE
| Path s20._1.s30

10:05:27.697 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s42 -> Path s20._1.s30
10:05:27.698 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path _2
| StructNode
|   CART_ID: Path s20._2.s31
|   CART_PRODUCT_STATUS: Path s20._2.s32
|   CART_TOTAL: Path s20._2.s33
|   CART_PRODUCT_QUANTITY: Path s20._2.s34
|   CART_USER_ID: Path s20._2.s35

10:05:27.698 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path _2.CART_ID
| Path s20._2.s31

10:05:27.698 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s43 -> Path s20._2.s31
10:05:27.699 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path _2.CART_PRODUCT_STATUS
| Path s20._2.s32

10:05:27.699 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s44 -> Path s20._2.s32
10:05:27.699 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path _2.CART_TOTAL
| Path s20._2.s33

10:05:27.699 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s45 -> Path s20._2.s33
10:05:27.699 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path _2.CART_PRODUCT_QUANTITY
| Path s20._2.s34

10:05:27.699 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s46 -> Path s20._2.s34
10:05:27.699 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path _2.CART_USER_ID
| Path s20._2.s35

10:05:27.700 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s47 -> Path s20._2.s35
10:05:27.700 [main] DEBUG slick.compiler.FlattenProjections - Adding translation for t21: (HashMap(List(CART_PRODUCT_ID, _1) -> s37, List(CART_USER_ID, _2) -> s47, List(CART_PRODUCT_STATUS, _2) -> s44, List(PRODUCT_NAME, _1) -> s36, List(PRODUCT_TYPE, _1) -> s40, List(CART_TOTAL, _2) -> s45, List(PRODUCT_ID, _1) -> s41, List(CART_PRODUCT_QUANTITY, _2) -> s46, List(PRODUCT_PRICE, _1) -> s42, List(IS_DELETED, _1) -> s39, List(CART_ID, _2) -> s43, List(PRODUCT_QUANTITY, _1) -> s38), UnassignedType)
10:05:27.702 [main] DEBUG slick.compiler.FlattenProjections - Flattened projection to
| Pure t21
|   value: StructNode
|     s36: Path s20._1.s24
|     s37: Path s20._1.s25
|     s38: Path s20._1.s26
|     s39: Path s20._1.s27
|     s40: Path s20._1.s28
|     s41: Path s20._1.s29
|     s42: Path s20._1.s30
|     s43: Path s20._2.s31
|     s44: Path s20._2.s32
|     s45: Path s20._2.s33
|     s46: Path s20._2.s34
|     s47: Path s20._2.s35

10:05:27.703 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s10._1.PRODUCT_QUANTITY with symbols t23, t22, t21
| Path s10._1.PRODUCT_QUANTITY : Int'

10:05:27.703 [main] DEBUG slick.compiler.FlattenProjections - Found s10._1.PRODUCT_QUANTITY with local part Path _1.PRODUCT_QUANTITY over t21
10:05:27.703 [main] DEBUG slick.compiler.FlattenProjections -   Translation for t21: HashMap(List(CART_PRODUCT_ID, _1) -> s37, List(CART_USER_ID, _2) -> s47, List(CART_PRODUCT_STATUS, _2) -> s44, List(PRODUCT_NAME, _1) -> s36, List(PRODUCT_TYPE, _1) -> s40, List(CART_TOTAL, _2) -> s45, List(PRODUCT_ID, _1) -> s41, List(CART_PRODUCT_QUANTITY, _2) -> s46, List(PRODUCT_PRICE, _1) -> s42, List(IS_DELETED, _1) -> s39, List(CART_ID, _2) -> s43, List(PRODUCT_QUANTITY, _1) -> s38)
10:05:27.703 [main] DEBUG slick.compiler.FlattenProjections - Translated s10._1.PRODUCT_QUANTITY to:
| Path s10.s38

10:05:27.704 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s10._2.CART_PRODUCT_QUANTITY with symbols t23, t22, t21
| Path s10._2.CART_PRODUCT_QUANTITY : Int'

10:05:27.704 [main] DEBUG slick.compiler.FlattenProjections - Found s10._2.CART_PRODUCT_QUANTITY with local part Path _2.CART_PRODUCT_QUANTITY over t21
10:05:27.704 [main] DEBUG slick.compiler.FlattenProjections -   Translation for t21: HashMap(List(CART_PRODUCT_ID, _1) -> s37, List(CART_USER_ID, _2) -> s47, List(CART_PRODUCT_STATUS, _2) -> s44, List(PRODUCT_NAME, _1) -> s36, List(PRODUCT_TYPE, _1) -> s40, List(CART_TOTAL, _2) -> s45, List(PRODUCT_ID, _1) -> s41, List(CART_PRODUCT_QUANTITY, _2) -> s46, List(PRODUCT_PRICE, _1) -> s42, List(IS_DELETED, _1) -> s39, List(CART_ID, _2) -> s43, List(PRODUCT_QUANTITY, _1) -> s38)
10:05:27.704 [main] DEBUG slick.compiler.FlattenProjections - Translated s10._2.CART_PRODUCT_QUANTITY to:
| Path s10.s46

10:05:27.704 [main] DEBUG slick.compiler.FlattenProjections - Flattening projection t17
10:05:27.704 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s9._2.CART_PRODUCT_STATUS with symbols t23, t22, t21
| Path s9._2.CART_PRODUCT_STATUS : String'

10:05:27.704 [main] DEBUG slick.compiler.FlattenProjections - Found s9._2.CART_PRODUCT_STATUS with local part Path _2.CART_PRODUCT_STATUS over t21
10:05:27.705 [main] DEBUG slick.compiler.FlattenProjections -   Translation for t21: HashMap(List(CART_PRODUCT_ID, _1) -> s37, List(CART_USER_ID, _2) -> s47, List(CART_PRODUCT_STATUS, _2) -> s44, List(PRODUCT_NAME, _1) -> s36, List(PRODUCT_TYPE, _1) -> s40, List(CART_TOTAL, _2) -> s45, List(PRODUCT_ID, _1) -> s41, List(CART_PRODUCT_QUANTITY, _2) -> s46, List(PRODUCT_PRICE, _1) -> s42, List(IS_DELETED, _1) -> s39, List(CART_ID, _2) -> s43, List(PRODUCT_QUANTITY, _1) -> s38)
10:05:27.705 [main] DEBUG slick.compiler.FlattenProjections - Translated s9._2.CART_PRODUCT_STATUS to:
| Path s9.s44

10:05:27.705 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path 
| Path s9.s44

10:05:27.706 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s48 -> Path s9.s44
10:05:27.706 [main] DEBUG slick.compiler.FlattenProjections - Adding translation for t17: (Map(List() -> s48), UnassignedType)
10:05:27.707 [main] DEBUG slick.compiler.FlattenProjections - Flattened projection to
| Pure t17
|   value: StructNode
|     s48: Path s9.s44

10:05:27.714 [main] DEBUG slick.compiler.QueryCompiler - After phase flattenProjections:
| Bind : Vector[t17<{s48: String'}>]
|   from s9: Filter s10 : Vector[t21<{s36: String', s37: Int', s38: Int', s39: Boolean', s40: String', s41: Int', s42: Float', s43: Int', s44: String', s45: Float', s46: Int', s47: Int'}>]
|     from s10: Bind : Vector[t21<{s36: String', s37: Int', s38: Int', s39: Boolean', s40: String', s41: Int', s42: Float', s43: Int', s44: String', s45: Float', s46: Int', s47: Int'}>]
|       from s20: Join Inner : Vector[(t22<{s24: String', s25: Int', s26: Int', s27: Boolean', s28: String', s29: Int', s30: Float'}>, t23<{s31: Int', s32: String', s33: Float', s34: Int', s35: Int'}>)]
|         left s11: Bind : Vector[t22<{s24: String', s25: Int', s26: Int', s27: Boolean', s28: String', s29: Int', s30: Float'}>]
|           from s18: Table PRODUCTS : Vector[@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]
|           select: Pure t22 : Vector[t22<{s24: String', s25: Int', s26: Int', s27: Boolean', s28: String', s29: Int', s30: Float'}>]
|             value: StructNode : {s24: String', s25: Int', s26: Int', s27: Boolean', s28: String', s29: Int', s30: Float'}
|               s24: Path s18.PRODUCT_NAME : String'
|               s25: Path s18.CART_PRODUCT_ID : Int'
|               s26: Path s18.PRODUCT_QUANTITY : Int'
|               s27: Path s18.IS_DELETED : Boolean'
|               s28: Path s18.PRODUCT_TYPE : String'
|               s29: Path s18.PRODUCT_ID : Int'
|               s30: Path s18.PRODUCT_PRICE : Float'
|         right s12: Bind : Vector[t23<{s31: Int', s32: String', s33: Float', s34: Int', s35: Int'}>]
|           from s19: Table CART : Vector[@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]
|           select: Pure t23 : Vector[t23<{s31: Int', s32: String', s33: Float', s34: Int', s35: Int'}>]
|             value: StructNode : {s31: Int', s32: String', s33: Float', s34: Int', s35: Int'}
|               s31: Path s19.CART_ID : Int'
|               s32: Path s19.CART_PRODUCT_STATUS : String'
|               s33: Path s19.CART_TOTAL : Float'
|               s34: Path s19.CART_PRODUCT_QUANTITY : Int'
|               s35: Path s19.CART_USER_ID : Int'
|         on: Apply Function = : Boolean
|           0: Path s11.s25 : Int'
|           1: Path s12.s31 : Int'
|       select: Pure t21 : Vector[t21<{s36: String', s37: Int', s38: Int', s39: Boolean', s40: String', s41: Int', s42: Float', s43: Int', s44: String', s45: Float', s46: Int', s47: Int'}>]
|         value: StructNode : {s36: String', s37: Int', s38: Int', s39: Boolean', s40: String', s41: Int', s42: Float', s43: Int', s44: String', s45: Float', s46: Int', s47: Int'}
|           s36: Path s20._1.s24 : String'
|           s37: Path s20._1.s25 : Int'
|           s38: Path s20._1.s26 : Int'
|           s39: Path s20._1.s27 : Boolean'
|           s40: Path s20._1.s28 : String'
|           s41: Path s20._1.s29 : Int'
|           s42: Path s20._1.s30 : Float'
|           s43: Path s20._2.s31 : Int'
|           s44: Path s20._2.s32 : String'
|           s45: Path s20._2.s33 : Float'
|           s46: Path s20._2.s34 : Int'
|           s47: Path s20._2.s35 : Int'
|     where: Apply Function >= : Boolean
|       0: Path s10.s38 : Int'
|       1: Path s10.s46 : Int'
|   select: Pure t17 : Vector[t17<{s48: String'}>]
|     value: StructNode : {s48: String'}
|       s48: Path s9.s44 : String'

10:05:27.716 [main] DEBUG slick.compiler.QueryCompiler - After phase rewriteJoins: (no change)
10:05:27.720 [main] DEBUG slick.compiler.QueryCompiler - After phase verifySymbols: (no change)
10:05:27.723 [main] DEBUG slick.compiler.QueryCompiler - After phase relabelUnions: (no change)
10:05:27.724 [main] DEBUG slick.compiler.QueryCompiler - After phase createAggregates: (no change)
10:05:27.726 [main] DEBUG slick.compiler.QueryCompiler - After phase resolveZipJoins: (no change)
10:05:27.731 [main] DEBUG slick.compiler.PruneProjections - Unreferenced: t17; Field refs: (t22,s25), (t23,s31), (t21,s46), (@t14,PRODUCT_NAME), (t22,s29), (@t16,CART_PRODUCT_STATUS), (@t14,PRODUCT_ID), (@t14,IS_DELETED), (@t14,CART_PRODUCT_ID), (t23,s35), (@t16,CART_ID), (@t16,CART_TOTAL), (t22,s26), (t22,s30), (t21,s44), (@t14,PRODUCT_QUANTITY), (@t16,CART_USER_ID), (t22,s24), (@t16,CART_PRODUCT_QUANTITY), (t22,s27), (@t14,PRODUCT_PRICE), (t21,s38), (t23,s32), (t23,s34), (@t14,PRODUCT_TYPE), (t23,s33), (t22,s28)
10:05:27.744 [main] DEBUG slick.compiler.QueryCompiler - After phase pruneProjections:
| Bind : Vector[t17<{s48: String'}>]
|   from s9: Filter s10 : Vector[t21<{s38: Int', s44: String', s46: Int'}>]
|     from s10: Bind : Vector[t21<{s38: Int', s44: String', s46: Int'}>]
|       from s20: Join Inner : Vector[(t22<{s24: String', s25: Int', s26: Int', s27: Boolean', s28: String', s29: Int', s30: Float'}>, t23<{s31: Int', s32: String', s33: Float', s34: Int', s35: Int'}>)]
|         left s11: Bind : Vector[t22<{s24: String', s25: Int', s26: Int', s27: Boolean', s28: String', s29: Int', s30: Float'}>]
|           from s18: Table PRODUCTS : Vector[@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]
|           select: Pure t22 : Vector[t22<{s24: String', s25: Int', s26: Int', s27: Boolean', s28: String', s29: Int', s30: Float'}>]
|             value: StructNode : {s24: String', s25: Int', s26: Int', s27: Boolean', s28: String', s29: Int', s30: Float'}
|               s24: Path s18.PRODUCT_NAME : String'
|               s25: Path s18.CART_PRODUCT_ID : Int'
|               s26: Path s18.PRODUCT_QUANTITY : Int'
|               s27: Path s18.IS_DELETED : Boolean'
|               s28: Path s18.PRODUCT_TYPE : String'
|               s29: Path s18.PRODUCT_ID : Int'
|               s30: Path s18.PRODUCT_PRICE : Float'
|         right s12: Bind : Vector[t23<{s31: Int', s32: String', s33: Float', s34: Int', s35: Int'}>]
|           from s19: Table CART : Vector[@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]
|           select: Pure t23 : Vector[t23<{s31: Int', s32: String', s33: Float', s34: Int', s35: Int'}>]
|             value: StructNode : {s31: Int', s32: String', s33: Float', s34: Int', s35: Int'}
|               s31: Path s19.CART_ID : Int'
|               s32: Path s19.CART_PRODUCT_STATUS : String'
|               s33: Path s19.CART_TOTAL : Float'
|               s34: Path s19.CART_PRODUCT_QUANTITY : Int'
|               s35: Path s19.CART_USER_ID : Int'
|         on: Apply Function = : Boolean
|           0: Path s11.s25 : Int'
|           1: Path s12.s31 : Int'
|       select: Pure t21 : Vector[t21<{s38: Int', s44: String', s46: Int'}>]
|         value: StructNode : {s38: Int', s44: String', s46: Int'}
|           s38: Path s20._1.s26 : Int'
|           s44: Path s20._2.s32 : String'
|           s46: Path s20._2.s34 : Int'
|     where: Apply Function >= : Boolean
|       0: Path s10.s38 : Int'
|       1: Path s10.s46 : Int'
|   select: Pure t17 : Vector[t17<{s48: String'}>]
|     value: StructNode : {s48: String'}
|       s48: Path s9.s44 : String'

10:05:27.745 [main] DEBUG slick.compiler.RewriteDistinct - No DISTINCT used as determined by assignUniqueSymbols - skipping phase
10:05:27.746 [main] DEBUG slick.compiler.QueryCompiler - After phase rewriteDistinct: (no change)
10:05:27.749 [main] DEBUG s.compiler.CreateResultSetMapping - Creating mapping from t17<String'>
10:05:27.755 [main] DEBUG slick.compiler.QueryCompiler - After phase createResultSetMapping:
| ResultSetMapping : Vector[String']
|   from s49: Bind : Vector[t17<{s48: String'}>]
|     from s9: Filter s10 : Vector[t21<{s38: Int', s44: String', s46: Int'}>]
|       from s10: Bind : Vector[t21<{s38: Int', s44: String', s46: Int'}>]
|         from s20: Join Inner : Vector[(t22<{s24: String', s25: Int', s26: Int', s27: Boolean', s28: String', s29: Int', s30: Float'}>, t23<{s31: Int', s32: String', s33: Float', s34: Int', s35: Int'}>)]
|           left s11: Bind : Vector[t22<{s24: String', s25: Int', s26: Int', s27: Boolean', s28: String', s29: Int', s30: Float'}>]
|             from s18: Table PRODUCTS : Vector[@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]
|             select: Pure t22 : Vector[t22<{s24: String', s25: Int', s26: Int', s27: Boolean', s28: String', s29: Int', s30: Float'}>]
|               value: StructNode : {s24: String', s25: Int', s26: Int', s27: Boolean', s28: String', s29: Int', s30: Float'}
|                 s24: Path s18.PRODUCT_NAME : String'
|                 s25: Path s18.CART_PRODUCT_ID : Int'
|                 s26: Path s18.PRODUCT_QUANTITY : Int'
|                 s27: Path s18.IS_DELETED : Boolean'
|                 s28: Path s18.PRODUCT_TYPE : String'
|                 s29: Path s18.PRODUCT_ID : Int'
|                 s30: Path s18.PRODUCT_PRICE : Float'
|           right s12: Bind : Vector[t23<{s31: Int', s32: String', s33: Float', s34: Int', s35: Int'}>]
|             from s19: Table CART : Vector[@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]
|             select: Pure t23 : Vector[t23<{s31: Int', s32: String', s33: Float', s34: Int', s35: Int'}>]
|               value: StructNode : {s31: Int', s32: String', s33: Float', s34: Int', s35: Int'}
|                 s31: Path s19.CART_ID : Int'
|                 s32: Path s19.CART_PRODUCT_STATUS : String'
|                 s33: Path s19.CART_TOTAL : Float'
|                 s34: Path s19.CART_PRODUCT_QUANTITY : Int'
|                 s35: Path s19.CART_USER_ID : Int'
|           on: Apply Function = : Boolean
|             0: Path s11.s25 : Int'
|             1: Path s12.s31 : Int'
|         select: Pure t21 : Vector[t21<{s38: Int', s44: String', s46: Int'}>]
|           value: StructNode : {s38: Int', s44: String', s46: Int'}
|             s38: Path s20._1.s26 : Int'
|             s44: Path s20._2.s32 : String'
|             s46: Path s20._2.s34 : Int'
|       where: Apply Function >= : Boolean
|         0: Path s10.s38 : Int'
|         1: Path s10.s46 : Int'
|     select: Pure t17 : Vector[t17<{s48: String'}>]
|       value: StructNode : {s48: String'}
|         s48: Path s9.s44 : String'
|   map: Path s49.s48 : String'

10:05:27.767 [main] DEBUG slick.compiler.HoistClientOps - Hoisting operations from Join:
| Join Inner : Vector[(t22<{s24: String', s25: Int', s26: Int', s27: Boolean', s28: String', s29: Int', s30: Float'}>, t23<{s31: Int', s32: String', s33: Float', s34: Int', s35: Int'}>)]
|   left s11: Bind : Vector[t22<{s24: String', s25: Int', s26: Int', s27: Boolean', s28: String', s29: Int', s30: Float'}>]
|     from s18: ...
|     select: Pure t22 : Vector[t22<{s24: String', s25: Int', s26: Int', s27: Boolean', s28: String', s29: Int', s30: Float'}>]
|       value: StructNode : {s24: String', s25: Int', s26: Int', s27: Boolean', s28: String', s29: Int', s30: Float'}
|         s24: Path s18.PRODUCT_NAME : String'
|         s25: Path s18.CART_PRODUCT_ID : Int'
|         s26: Path s18.PRODUCT_QUANTITY : Int'
|         s27: Path s18.IS_DELETED : Boolean'
|         s28: Path s18.PRODUCT_TYPE : String'
|         s29: Path s18.PRODUCT_ID : Int'
|         s30: Path s18.PRODUCT_PRICE : Float'
|   right s12: Bind : Vector[t23<{s31: Int', s32: String', s33: Float', s34: Int', s35: Int'}>]
|     from s19: ...
|     select: Pure t23 : Vector[t23<{s31: Int', s32: String', s33: Float', s34: Int', s35: Int'}>]
|       value: StructNode : {s31: Int', s32: String', s33: Float', s34: Int', s35: Int'}
|         s31: Path s19.CART_ID : Int'
|         s32: Path s19.CART_PRODUCT_STATUS : String'
|         s33: Path s19.CART_TOTAL : Float'
|         s34: Path s19.CART_PRODUCT_QUANTITY : Int'
|         s35: Path s19.CART_USER_ID : Int'
|   on: Apply Function = : Boolean
|     0: Path s11.s25 : Int'
|     1: Path s12.s31 : Int'

10:05:27.771 [main] DEBUG slick.compiler.HoistClientOps - Hoisting operations from defs in left side of Join: 
10:05:27.772 [main] DEBUG slick.compiler.HoistClientOps - New defs: HashMap(Path s18.CART_PRODUCT_ID -> s50, Path s18.PRODUCT_QUANTITY -> s51, Path s18.PRODUCT_TYPE -> s52, Path s18.PRODUCT_NAME -> s53, Path s18.PRODUCT_PRICE -> s54, Path s18.IS_DELETED -> s55, Path s18.PRODUCT_ID -> s56)
10:05:27.774 [main] DEBUG slick.compiler.HoistClientOps - Translated left join side:
| Bind : Vector[t57<{s56: Int', s55: Boolean', s54: Float', s51: Int', s53: String', s50: Int', s52: String'}>]
|   from s18: ...
|   select: Pure t57 : Vector[t57<{s56: Int', s55: Boolean', s54: Float', s51: Int', s53: String', s50: Int', s52: String'}>]
|     value: StructNode : {s56: Int', s55: Boolean', s54: Float', s51: Int', s53: String', s50: Int', s52: String'}
|       s56: Path s18.PRODUCT_ID : Int'
|       s55: Path s18.IS_DELETED : Boolean'
|       s54: Path s18.PRODUCT_PRICE : Float'
|       s51: Path s18.PRODUCT_QUANTITY : Int'
|       s53: Path s18.PRODUCT_NAME : String'
|       s50: Path s18.CART_PRODUCT_ID : Int'
|       s52: Path s18.PRODUCT_TYPE : String'

10:05:27.777 [main] DEBUG slick.compiler.HoistClientOps - Hoisting operations from defs in right side of Join: 
10:05:27.778 [main] DEBUG slick.compiler.HoistClientOps - New defs: HashMap(Path s19.CART_TOTAL -> s58, Path s19.CART_ID -> s59, Path s19.CART_PRODUCT_QUANTITY -> s60, Path s19.CART_PRODUCT_STATUS -> s61, Path s19.CART_USER_ID -> s62)
10:05:27.780 [main] DEBUG slick.compiler.HoistClientOps - Translated right join side:
| Bind : Vector[t63<{s59: Int', s62: Int', s61: String', s60: Int', s58: Float'}>]
|   from s19: ...
|   select: Pure t63 : Vector[t63<{s59: Int', s62: Int', s61: String', s60: Int', s58: Float'}>]
|     value: StructNode : {s59: Int', s62: Int', s61: String', s60: Int', s58: Float'}
|       s59: Path s19.CART_ID : Int'
|       s62: Path s19.CART_USER_ID : Int'
|       s61: Path s19.CART_PRODUCT_STATUS : String'
|       s60: Path s19.CART_PRODUCT_QUANTITY : Int'
|       s58: Path s19.CART_TOTAL : Float'

10:05:27.813 [main] DEBUG slick.compiler.HoistClientOps - from3
| Join Inner
|   left s11: Bind : Vector[t57<{s56: Int', s55: Boolean', s54: Float', s51: Int', s53: String', s50: Int', s52: String'}>]
|     from s18: Table PRODUCTS : Vector[@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]
|     select: Pure t57 : Vector[t57<{s56: Int', s55: Boolean', s54: Float', s51: Int', s53: String', s50: Int', s52: String'}>]
|       value: StructNode : {s56: Int', s55: Boolean', s54: Float', s51: Int', s53: String', s50: Int', s52: String'}
|         s56: Path s18.PRODUCT_ID : Int'
|         s55: Path s18.IS_DELETED : Boolean'
|         s54: Path s18.PRODUCT_PRICE : Float'
|         s51: Path s18.PRODUCT_QUANTITY : Int'
|         s53: Path s18.PRODUCT_NAME : String'
|         s50: Path s18.CART_PRODUCT_ID : Int'
|         s52: Path s18.PRODUCT_TYPE : String'
|   right s12: Bind : Vector[t63<{s59: Int', s62: Int', s61: String', s60: Int', s58: Float'}>]
|     from s19: Table CART : Vector[@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]
|     select: Pure t63 : Vector[t63<{s59: Int', s62: Int', s61: String', s60: Int', s58: Float'}>]
|       value: StructNode : {s59: Int', s62: Int', s61: String', s60: Int', s58: Float'}
|         s59: Path s19.CART_ID : Int'
|         s62: Path s19.CART_USER_ID : Int'
|         s61: Path s19.CART_PRODUCT_STATUS : String'
|         s60: Path s19.CART_PRODUCT_QUANTITY : Int'
|         s58: Path s19.CART_TOTAL : Float'
|   on: Apply Function =
|     0: Path s11.s50
|     1: Path s12.s59

10:05:27.814 [main] DEBUG slick.compiler.HoistClientOps - sel2
| Pure t21
|   value: StructNode
|     s38: Path s20._1.s51
|     s44: Path s20._2.s61
|     s46: Path s20._2.s60

10:05:27.816 [main] DEBUG slick.compiler.HoistClientOps - Pulling Bind out of Filter
| Filter s10
|   from s10: Bind : Vector[t21<{s38: Int', s44: String', s46: Int'}>]
|     from s20: ...
|     select: Pure t21 : Vector[t21<{s38: Int', s44: String', s46: Int'}>]
|       value: StructNode : {s38: Int', s44: String', s46: Int'}
|         s38: Path s20._1.s51 : Int'
|         s44: Path s20._2.s61 : String'
|         s46: Path s20._2.s60 : Int'
|   where: Apply Function >= : Boolean
|     0: Path s10.s38 : Int'
|     1: Path s10.s46 : Int'

10:05:27.820 [main] DEBUG slick.compiler.HoistClientOps - Pulled Bind out of Filter
| Bind
|   from s20: Filter s64
|     from s64: ...
|     where: Apply Function >=
|       0: Path s64._1.s51
|       1: Path s64._2.s60
|   select: Pure t21
|     value: StructNode
|       s38: Path s20._1.s51
|       s44: Path s20._2.s61
|       s46: Path s20._2.s60

10:05:27.822 [main] DEBUG slick.compiler.HoistClientOps - Merging top-level Binds
| Bind
|   from s9: Bind : Vector[t21<{s38: Int', s44: String', s46: Int'}>]
|     from s20: ...
|     select: Pure t21 : Vector[t21<{s38: Int', s44: String', s46: Int'}>]
|       value: StructNode : {s38: Int', s44: String', s46: Int'}
|         s38: Path s20._1.s51 : Int'
|         s44: Path s20._2.s61 : String'
|         s46: Path s20._2.s60 : Int'
|   select: Pure t17 : Vector[t17<{s48: String'}>]
|     value: StructNode : {s48: String'}
|       s48: Path s9.s44 : String'

10:05:27.824 [main] DEBUG slick.compiler.HoistClientOps - Hoisting operations from defs: 
10:05:27.825 [main] DEBUG slick.compiler.HoistClientOps - New defs: Map(0 -> (Path s20._2.s61,s65))
10:05:27.828 [main] DEBUG slick.compiler.HoistClientOps - New ResultSetMapping:
| ResultSetMapping : Vector[String']
|   from s49: Bind : Vector[t66<{s65: String'}>]
|     from s20: ...
|     select: Pure t66 : Vector[t66<{s65: String'}>]
|       value: StructNode : {s65: String'}
|         s65: Path s20._2.s61 : String'
|   map: Path s49.s65 : String'

10:05:27.830 [main] DEBUG slick.compiler.QueryCompiler - After phase hoistClientOps:
| ResultSetMapping : Vector[String']
|   from s49: Bind : Vector[t66<{s65: String'}>]
|     from s20: Filter s64 : Vector[(t57<{s56: Int', s55: Boolean', s54: Float', s51: Int', s53: String', s50: Int', s52: String'}>, t63<{s59: Int', s62: Int', s61: String', s60: Int', s58: Float'}>)]
|       from s64: Join Inner : Vector[(t57<{s56: Int', s55: Boolean', s54: Float', s51: Int', s53: String', s50: Int', s52: String'}>, t63<{s59: Int', s62: Int', s61: String', s60: Int', s58: Float'}>)]
|         left s11: Bind : Vector[t57<{s56: Int', s55: Boolean', s54: Float', s51: Int', s53: String', s50: Int', s52: String'}>]
|           from s18: Table PRODUCTS : Vector[@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]
|           select: Pure t57 : Vector[t57<{s56: Int', s55: Boolean', s54: Float', s51: Int', s53: String', s50: Int', s52: String'}>]
|             value: StructNode : {s56: Int', s55: Boolean', s54: Float', s51: Int', s53: String', s50: Int', s52: String'}
|               s56: Path s18.PRODUCT_ID : Int'
|               s55: Path s18.IS_DELETED : Boolean'
|               s54: Path s18.PRODUCT_PRICE : Float'
|               s51: Path s18.PRODUCT_QUANTITY : Int'
|               s53: Path s18.PRODUCT_NAME : String'
|               s50: Path s18.CART_PRODUCT_ID : Int'
|               s52: Path s18.PRODUCT_TYPE : String'
|         right s12: Bind : Vector[t63<{s59: Int', s62: Int', s61: String', s60: Int', s58: Float'}>]
|           from s19: Table CART : Vector[@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]
|           select: Pure t63 : Vector[t63<{s59: Int', s62: Int', s61: String', s60: Int', s58: Float'}>]
|             value: StructNode : {s59: Int', s62: Int', s61: String', s60: Int', s58: Float'}
|               s59: Path s19.CART_ID : Int'
|               s62: Path s19.CART_USER_ID : Int'
|               s61: Path s19.CART_PRODUCT_STATUS : String'
|               s60: Path s19.CART_PRODUCT_QUANTITY : Int'
|               s58: Path s19.CART_TOTAL : Float'
|         on: Apply Function = : Boolean
|           0: Path s11.s50 : Int'
|           1: Path s12.s59 : Int'
|       where: Apply Function >= : Boolean
|         0: Path s64._1.s51 : Int'
|         1: Path s64._2.s60 : Int'
|     select: Pure t66 : Vector[t66<{s65: String'}>]
|       value: StructNode : {s65: String'}
|         s65: Path s20._2.s61 : String'
|   map: Path s49.s65 : String'

10:05:27.833 [main] DEBUG slick.compiler.QueryCompiler - After phase reorderOperations: (no change)
10:05:27.835 [main] DEBUG slick.compiler.MergeToComprehensions - Table fields: MapView(<not computed>)
10:05:27.841 [main] DEBUG slick.compiler.MergeToComprehensions - Creating source from Join s11/s12:
| Join Inner : Vector[(t57<{s56: Int', s55: Boolean', s54: Float', s51: Int', s53: String', s50: Int', s52: String'}>, t63<{s59: Int', s62: Int', s61: String', s60: Int', s58: Float'}>)]
|   left s11: Bind : Vector[t57<{s56: Int', s55: Boolean', s54: Float', s51: Int', s53: String', s50: Int', s52: String'}>]
|     from s18: Table PRODUCTS : Vector[@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]
|     select: Pure t57 : Vector[t57<{s56: Int', s55: Boolean', s54: Float', s51: Int', s53: String', s50: Int', s52: String'}>]
|       value: StructNode : {s56: Int', s55: Boolean', s54: Float', s51: Int', s53: String', s50: Int', s52: String'}
|         s56: Path s18.PRODUCT_ID : Int'
|         s55: Path s18.IS_DELETED : Boolean'
|         s54: Path s18.PRODUCT_PRICE : Float'
|         s51: Path s18.PRODUCT_QUANTITY : Int'
|         s53: Path s18.PRODUCT_NAME : String'
|         s50: Path s18.CART_PRODUCT_ID : Int'
|         s52: Path s18.PRODUCT_TYPE : String'
|   right s12: Bind : Vector[t63<{s59: Int', s62: Int', s61: String', s60: Int', s58: Float'}>]
|     from s19: Table CART : Vector[@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]
|     select: Pure t63 : Vector[t63<{s59: Int', s62: Int', s61: String', s60: Int', s58: Float'}>]
|       value: StructNode : {s59: Int', s62: Int', s61: String', s60: Int', s58: Float'}
|         s59: Path s19.CART_ID : Int'
|         s62: Path s19.CART_USER_ID : Int'
|         s61: Path s19.CART_PRODUCT_STATUS : String'
|         s60: Path s19.CART_PRODUCT_QUANTITY : Int'
|         s58: Path s19.CART_TOTAL : Float'
|   on: Apply Function = : Boolean
|     0: Path s11.s50 : Int'
|     1: Path s12.s59 : Int'

10:05:27.842 [main] DEBUG slick.compiler.MergeToComprehensions - Bind from s18 is aliasing: true
10:05:27.843 [main] DEBUG slick.compiler.MergeToComprehensions - Creating source from TableNode:
| Table PRODUCTS : Vector[@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]

10:05:27.844 [main] DEBUG slick.compiler.MergeToComprehensions - Mappings are: ConstArray(((@t14,PRODUCT_ID),List(PRODUCT_ID)), ((@t14,IS_DELETED),List(IS_DELETED)), ((@t14,PRODUCT_PRICE),List(PRODUCT_PRICE)), ((@t14,PRODUCT_QUANTITY),List(PRODUCT_QUANTITY)), ((@t14,PRODUCT_NAME),List(PRODUCT_NAME)), ((@t14,CART_PRODUCT_ID),List(CART_PRODUCT_ID)), ((@t14,PRODUCT_TYPE),List(PRODUCT_TYPE)))
10:05:27.845 [main] DEBUG slick.compiler.MergeToComprehensions - Recombining aliasing Bind mappings ConstArray((s56,Path s18.PRODUCT_ID), (s55,Path s18.IS_DELETED), (s54,Path s18.PRODUCT_PRICE), (s51,Path s18.PRODUCT_QUANTITY), (s53,Path s18.PRODUCT_NAME), (s50,Path s18.CART_PRODUCT_ID), (s52,Path s18.PRODUCT_TYPE))
10:05:27.847 [main] DEBUG slick.compiler.MergeToComprehensions - Bind from s19 is aliasing: true
10:05:27.847 [main] DEBUG slick.compiler.MergeToComprehensions - Creating source from TableNode:
| Table CART : Vector[@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]

10:05:27.847 [main] DEBUG slick.compiler.MergeToComprehensions - Mappings are: ConstArray(((@t16,CART_ID),List(CART_ID)), ((@t16,CART_USER_ID),List(CART_USER_ID)), ((@t16,CART_PRODUCT_STATUS),List(CART_PRODUCT_STATUS)), ((@t16,CART_PRODUCT_QUANTITY),List(CART_PRODUCT_QUANTITY)), ((@t16,CART_TOTAL),List(CART_TOTAL)))
10:05:27.847 [main] DEBUG slick.compiler.MergeToComprehensions - Recombining aliasing Bind mappings ConstArray((s59,Path s19.CART_ID), (s62,Path s19.CART_USER_ID), (s61,Path s19.CART_PRODUCT_STATUS), (s60,Path s19.CART_PRODUCT_QUANTITY), (s58,Path s19.CART_TOTAL))
10:05:27.848 [main] DEBUG slick.compiler.MergeToComprehensions - Converted left side of Join s11/s12:
| Table PRODUCTS : Vector[@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]

10:05:27.849 [main] DEBUG slick.compiler.MergeToComprehensions - Converted right side of Join s11/s12:
| Table CART : Vector[@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]

10:05:27.851 [main] DEBUG slick.compiler.MergeToComprehensions - Mappings for `on` clause in Join s11/s12: HashMap((t57,s54) -> List(_1, PRODUCT_PRICE), (t57,s56) -> List(_1, PRODUCT_ID), (t63,s59) -> List(_2, CART_ID), (t57,s51) -> List(_1, PRODUCT_QUANTITY), (t57,s53) -> List(_1, PRODUCT_NAME), (t57,s50) -> List(_1, CART_PRODUCT_ID), (t57,s55) -> List(_1, IS_DELETED), (t63,s61) -> List(_2, CART_PRODUCT_STATUS), (t63,s58) -> List(_2, CART_TOTAL), (t57,s52) -> List(_1, PRODUCT_TYPE), (t63,s62) -> List(_2, CART_USER_ID), (t63,s60) -> List(_2, CART_PRODUCT_QUANTITY))
10:05:27.854 [main] DEBUG slick.compiler.MergeToComprehensions - Transformed `on` clause in Join s11/s12:
| Apply Function = : Boolean
|   0: Path s11.CART_PRODUCT_ID : Int'
|   1: Path s12.CART_ID : Int'

10:05:27.855 [main] DEBUG slick.compiler.MergeToComprehensions - Created source from Join s11/s12:
| Join Inner : Vector[(@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>, @t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>)]
|   left s11: Table PRODUCTS : Vector[@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]
|   right s12: Table CART : Vector[@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]
|   on: Apply Function = : Boolean
|     0: Path s11.CART_PRODUCT_ID : Int'
|     1: Path s12.CART_ID : Int'

10:05:27.856 [main] DEBUG slick.compiler.MergeToComprehensions - Building new Comprehension from:
| Join Inner : Vector[(@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>, @t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>)]
|   left s11: Table PRODUCTS : Vector[@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]
|   right s12: Table CART : Vector[@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]
|   on: Apply Function = : Boolean
|     0: Path s11.CART_PRODUCT_ID : Int'
|     1: Path s12.CART_ID : Int'

10:05:27.868 [main] DEBUG slick.compiler.MergeToComprehensions - Built new Comprehension:
| Comprehension s67, None, None, ConstArray(), None, None, None, None, false : Vector[t68<{s69: Int', s70: Boolean', s71: Float', s72: Int', s73: String', s74: Int', s75: String', s76: Int', s77: Int', s78: String', s79: Int', s80: Float'}>]
|   from s67: Join Inner : Vector[(@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>, @t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>)]
|     left s11: Table PRODUCTS : Vector[@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]
|     right s12: Table CART : Vector[@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]
|     on: Apply Function = : Boolean
|       0: Path s11.CART_PRODUCT_ID : Int'
|       1: Path s12.CART_ID : Int'
|   select: Pure t68 : Vector[t68<{s69: Int', s70: Boolean', s71: Float', s72: Int', s73: String', s74: Int', s75: String', s76: Int', s77: Int', s78: String', s79: Int', s80: Float'}>]
|     value: StructNode : {s69: Int', s70: Boolean', s71: Float', s72: Int', s73: String', s74: Int', s75: String', s76: Int', s77: Int', s78: String', s79: Int', s80: Float'}
|       s69: Path s67._1.PRODUCT_ID : Int'
|       s70: Path s67._1.IS_DELETED : Boolean'
|       s71: Path s67._1.PRODUCT_PRICE : Float'
|       s72: Path s67._1.PRODUCT_QUANTITY : Int'
|       s73: Path s67._1.PRODUCT_NAME : String'
|       s74: Path s67._1.CART_PRODUCT_ID : Int'
|       s75: Path s67._1.PRODUCT_TYPE : String'
|       s76: Path s67._2.CART_ID : Int'
|       s77: Path s67._2.CART_USER_ID : Int'
|       s78: Path s67._2.CART_PRODUCT_STATUS : String'
|       s79: Path s67._2.CART_PRODUCT_QUANTITY : Int'
|       s80: Path s67._2.CART_TOTAL : Float'

10:05:27.869 [main] DEBUG slick.compiler.MergeToComprehensions - Replacements are: HashMap((t57,s54) -> s71, (t57,s56) -> s69, (t63,s59) -> s76, (t57,s51) -> s72, (t57,s53) -> s73, (t57,s50) -> s74, (t57,s55) -> s70, (t63,s61) -> s78, (t63,s58) -> s80, (t57,s52) -> s75, (t63,s62) -> s77, (t63,s60) -> s79)
10:05:27.870 [main] DEBUG slick.compiler.MergeToComprehensions - Merging Filter into Comprehension:
| Filter s64 : Vector[(t57<{s56: Int', s55: Boolean', s54: Float', s51: Int', s53: String', s50: Int', s52: String'}>, t63<{s59: Int', s62: Int', s61: String', s60: Int', s58: Float'}>)]
|   from s64: ...
|   where: Apply Function >= : Boolean
|     0: Path s64._1.s51 : Int'
|     1: Path s64._2.s60 : Int'

10:05:27.873 [main] DEBUG slick.compiler.MergeToComprehensions - Merged Filter into Comprehension:
| Comprehension s67, Some(Apply Function >=), None, ConstArray(), None, None, None, None, false : Vector[t68<{s69: Int', s70: Boolean', s71: Float', s72: Int', s73: String', s74: Int', s75: String', s76: Int', s77: Int', s78: String', s79: Int', s80: Float'}>]
|   from s67: Join Inner : Vector[(@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>, @t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>)]
|     left s11: Table PRODUCTS : Vector[@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]
|     right s12: Table CART : Vector[@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]
|     on: Apply Function = : Boolean
|       0: Path s11.CART_PRODUCT_ID : Int'
|       1: Path s12.CART_ID : Int'
|   select: Pure t68 : Vector[t68<{s69: Int', s70: Boolean', s71: Float', s72: Int', s73: String', s74: Int', s75: String', s76: Int', s77: Int', s78: String', s79: Int', s80: Float'}>]
|     value: StructNode : {s69: Int', s70: Boolean', s71: Float', s72: Int', s73: String', s74: Int', s75: String', s76: Int', s77: Int', s78: String', s79: Int', s80: Float'}
|       s69: Path s67._1.PRODUCT_ID : Int'
|       s70: Path s67._1.IS_DELETED : Boolean'
|       s71: Path s67._1.PRODUCT_PRICE : Float'
|       s72: Path s67._1.PRODUCT_QUANTITY : Int'
|       s73: Path s67._1.PRODUCT_NAME : String'
|       s74: Path s67._1.CART_PRODUCT_ID : Int'
|       s75: Path s67._1.PRODUCT_TYPE : String'
|       s76: Path s67._2.CART_ID : Int'
|       s77: Path s67._2.CART_USER_ID : Int'
|       s78: Path s67._2.CART_PRODUCT_STATUS : String'
|       s79: Path s67._2.CART_PRODUCT_QUANTITY : Int'
|       s80: Path s67._2.CART_TOTAL : Float'
|   where: Apply Function >= : Boolean
|     0: Path s67._1.PRODUCT_QUANTITY : Int'
|     1: Path s67._2.CART_PRODUCT_QUANTITY : Int'

10:05:27.875 [main] DEBUG slick.compiler.MergeToComprehensions - Merging Bind into Comprehension as 'select':
| Bind : Vector[t66<{s65: String'}>]
|   from s20: ...
|   select: Pure t66 : Vector[t66<{s65: String'}>]
|     value: StructNode : {s65: String'}
|       s65: Path s20._2.s61 : String'

10:05:27.877 [main] DEBUG slick.compiler.MergeToComprehensions - Merged Bind into Comprehension as 'select':
| Comprehension s67, Some(Apply Function >=), None, ConstArray(), None, None, None, None, false : Vector[t66<{s65: String'}>]
|   from s67: Join Inner : Vector[(@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>, @t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>)]
|     left s11: Table PRODUCTS : Vector[@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]
|     right s12: Table CART : Vector[@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]
|     on: Apply Function = : Boolean
|       0: Path s11.CART_PRODUCT_ID : Int'
|       1: Path s12.CART_ID : Int'
|   select: Pure t66 : Vector[t66<{s65: String'}>]
|     value: StructNode : {s65: String'}
|       s65: Path s67._2.CART_PRODUCT_STATUS : String'
|   where: Apply Function >= : Boolean
|     0: Path s67._1.PRODUCT_QUANTITY : Int'
|     1: Path s67._2.CART_PRODUCT_QUANTITY : Int'

10:05:27.878 [main] DEBUG slick.compiler.MergeToComprehensions - Replacements are: Map((t66,s65) -> s65)
10:05:27.879 [main] DEBUG slick.compiler.MergeToComprehensions - Mappings are: ConstArray(((t66,s65),List(s65)))
10:05:27.882 [main] DEBUG slick.compiler.QueryCompiler - After phase mergeToComprehensions:
| ResultSetMapping : Vector[String']
|   from s49: Comprehension s67, Some(Apply Function >=), None, ConstArray(), None, None, None, None, false : Vector[t66<{s65: String'}>]
|     from s67: Join Inner : Vector[(@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>, @t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>)]
|       left s11: Table PRODUCTS : Vector[@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]
|       right s12: Table CART : Vector[@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]
|       on: Apply Function = : Boolean
|         0: Path s11.CART_PRODUCT_ID : Int'
|         1: Path s12.CART_ID : Int'
|     select: Pure t66 : Vector[t66<{s65: String'}>]
|       value: StructNode : {s65: String'}
|         s65: Path s67._2.CART_PRODUCT_STATUS : String'
|     where: Apply Function >= : Boolean
|       0: Path s67._1.PRODUCT_QUANTITY : Int'
|       1: Path s67._2.CART_PRODUCT_QUANTITY : Int'
|   map: Path s49.s65 : String'

10:05:27.884 [main] DEBUG slick.compiler.QueryCompiler - After phase optimizeScalar: (no change)
10:05:27.887 [main] DEBUG slick.compiler.RemoveFieldNames - Required symbols: s65 -> 0
10:05:27.899 [main] DEBUG slick.compiler.RemoveFieldNames - Transformed RSM: 
| ResultSetMapping
|   from s49: Comprehension s67, Some(Apply Function >=), None, ConstArray(), None, None, None, None, false : Vector[t66<(String')>]
|     from s67: Join Inner : Vector[(@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>, @t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>)]
|       left s11: Table PRODUCTS : Vector[@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]
|       right s12: Table CART : Vector[@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]
|       on: Apply Function = : Boolean
|         0: Path s11.CART_PRODUCT_ID : Int'
|         1: Path s12.CART_ID : Int'
|     select: Pure t66 : Vector[t66<(String')>]
|       value: ProductNode : (String')
|         1: Path s67._2.CART_PRODUCT_STATUS : String'
|     where: Apply Function >= : Boolean
|       0: Path s67._1.PRODUCT_QUANTITY : Int'
|       1: Path s67._2.CART_PRODUCT_QUANTITY : Int'
|   map: Path s49.s65 : String'

10:05:27.901 [main] DEBUG slick.compiler.QueryCompiler - After phase removeFieldNames:
| ResultSetMapping : Vector[String']
|   from s49: Comprehension s67, Some(Apply Function >=), None, ConstArray(), None, None, None, None, false : Vector[t66<(String')>]
|     from s67: Join Inner : Vector[(@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>, @t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>)]
|       left s11: Table PRODUCTS : Vector[@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]
|       right s12: Table CART : Vector[@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]
|       on: Apply Function = : Boolean
|         0: Path s11.CART_PRODUCT_ID : Int'
|         1: Path s12.CART_ID : Int'
|     select: Pure t66 : Vector[t66<(String')>]
|       value: ProductNode : (String')
|         1: Path s67._2.CART_PRODUCT_STATUS : String'
|     where: Apply Function >= : Boolean
|       0: Path s67._1.PRODUCT_QUANTITY : Int'
|       1: Path s67._2.CART_PRODUCT_QUANTITY : Int'
|   map: Path s49._1 : String'

10:05:27.904 [main] DEBUG slick.compiler.CodeGen - Compiling server-side and mapping with server-side:
| Comprehension s67, Some(Apply Function >=), None, ConstArray(), None, None, None, None, false : Vector[t66<(String')>]
|   from s67: Join Inner : Vector[(@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>, @t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>)]
|     left s11: Table PRODUCTS : Vector[@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]
|     right s12: Table CART : Vector[@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]
|     on: Apply Function = : Boolean
|       0: Path s11.CART_PRODUCT_ID : Int'
|       1: Path s12.CART_ID : Int'
|   select: Pure t66 : Vector[t66<(String')>]
|     value: ProductNode : (String')
|       1: Path s67._2.CART_PRODUCT_STATUS : String'
|   where: Apply Function >= : Boolean
|     0: Path s67._1.PRODUCT_QUANTITY : Int'
|     1: Path s67._2.CART_PRODUCT_QUANTITY : Int'

10:05:27.935 [main] DEBUG s.relational.ResultConverterCompiler - Compiled ResultConverter
| SpecializedJdbcResultConverter$$anon$1 idx=1, name=<computed> : String'

10:05:27.936 [main] DEBUG slick.compiler.CodeGen - Compiled server-side to:
| CompiledStatement "select s12.`CART_PRODUCT_STATUS` from `PRODUCTS` s11, `CART` s12 where (s11.`PRODUCT_QUANTITY` >= s12.`CART_PRODUCT_QUANTITY`) and (s11.`CART_PRODUCT_ID` = s12.`CART_ID`)" : Vector[t66<(String')>]

10:05:27.937 [main] DEBUG slick.compiler.QueryCompiler - After phase codeGen:
| ResultSetMapping : Vector[String']
|   from s49: CompiledStatement "select s12.`CART_PRODUCT_STATUS` from `PRODUCTS` s11, `CART` s12 where (s11.`PRODUCT_QUANTITY` >= s12.`CART_PRODUCT_QUANTITY`) and (s11.`CART_PRODUCT_ID` = s12.`CART_ID`)" : Vector[t66<(String')>]
|   map: CompiledMapping : String'
|     converter: SpecializedJdbcResultConverter$$anon$1 idx=1, name=<computed> : String'

10:05:27.938 [main] DEBUG s.compiler.QueryCompilerBenchmark - ------------------- Phase: Time ---------
10:05:27.944 [main] DEBUG s.compiler.QueryCompilerBenchmark -       assignUniqueSymbols:   24.198922 ms
10:05:27.944 [main] DEBUG s.compiler.QueryCompilerBenchmark -           unrollTailBinds:    2.196433 ms
10:05:27.944 [main] DEBUG s.compiler.QueryCompilerBenchmark -                inferTypes:    8.869696 ms
10:05:27.944 [main] DEBUG s.compiler.QueryCompilerBenchmark -              expandTables:   32.846503 ms
10:05:27.944 [main] DEBUG s.compiler.QueryCompilerBenchmark -           forceOuterBinds:   11.730085 ms
10:05:27.945 [main] DEBUG s.compiler.QueryCompilerBenchmark -         removeMappedTypes:    4.057735 ms
10:05:27.945 [main] DEBUG s.compiler.QueryCompilerBenchmark -                expandSums:    1.229243 ms
10:05:27.945 [main] DEBUG s.compiler.QueryCompilerBenchmark -         emulateOuterJoins:    2.769102 ms
10:05:27.945 [main] DEBUG s.compiler.QueryCompilerBenchmark -             expandRecords:   24.979578 ms
10:05:27.945 [main] DEBUG s.compiler.QueryCompilerBenchmark -        flattenProjections:   78.060704 ms
10:05:27.945 [main] DEBUG s.compiler.QueryCompilerBenchmark -              rewriteJoins:    1.708097 ms
10:05:27.945 [main] DEBUG s.compiler.QueryCompilerBenchmark -             verifySymbols:    3.999845 ms
10:05:27.946 [main] DEBUG s.compiler.QueryCompilerBenchmark -             relabelUnions:    2.647705 ms
10:05:27.946 [main] DEBUG s.compiler.QueryCompilerBenchmark -          createAggregates:    1.066876 ms
10:05:27.946 [main] DEBUG s.compiler.QueryCompilerBenchmark -           resolveZipJoins:    1.962892 ms
10:05:27.946 [main] DEBUG s.compiler.QueryCompilerBenchmark -          pruneProjections:   18.100951 ms
10:05:27.946 [main] DEBUG s.compiler.QueryCompilerBenchmark -           rewriteDistinct:    1.602496 ms
10:05:27.947 [main] DEBUG s.compiler.QueryCompilerBenchmark -    createResultSetMapping:    9.505560 ms
10:05:27.947 [main] DEBUG s.compiler.QueryCompilerBenchmark -            hoistClientOps:   75.216551 ms
10:05:27.947 [main] DEBUG s.compiler.QueryCompilerBenchmark -         reorderOperations:    2.502684 ms
10:05:27.947 [main] DEBUG s.compiler.QueryCompilerBenchmark -     mergeToComprehensions:   48.747317 ms
10:05:27.947 [main] DEBUG s.compiler.QueryCompilerBenchmark -            optimizeScalar:    2.342920 ms
10:05:27.947 [main] DEBUG s.compiler.QueryCompilerBenchmark -          removeFieldNames:   17.307859 ms
10:05:27.947 [main] DEBUG s.compiler.QueryCompilerBenchmark -                   codeGen:   36.174659 ms
10:05:27.947 [main] DEBUG s.compiler.QueryCompilerBenchmark -                     TOTAL:  413.824413 ms
10:05:27.954 [main] DEBUG slick.basic.BasicBackend.action - #1: result [select s12.`CART_PRODUCT_STATUS` from `PRODUCTS` s11, `CART` s12 where (s11.`PRODUCT_QUANTITY` >= s12.`CART_PRODUCT_QUANTITY`) and (s11.`CART_PRODUCT_ID` = s12.`CART_ID`)]
10:05:28.273 [mydb-1] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: select s12.`CART_PRODUCT_STATUS` from `PRODUCTS` s11, `CART` s12 where (s11.`PRODUCT_QUANTITY` >= s12.`CART_PRODUCT_QUANTITY`) and (s11.`CART_PRODUCT_ID` = s12.`CART_ID`)
10:05:28.290 [mydb-1] DEBUG slick.jdbc.JdbcBackend.statement - Executing prepared statement: com.mysql.cj.jdbc.ClientPreparedStatement: select s12.`CART_PRODUCT_STATUS` from `PRODUCTS` s11, `CART` s12 where (s11.`PRODUCT_QUANTITY` >= s12.`CART_PRODUCT_QUANTITY`) and (s11.`CART_PRODUCT_ID` = s12.`CART_ID`)
10:05:28.290 [mydb-1] DEBUG s.j.J.statementAndParameter - Executing prepared statement: com.mysql.cj.jdbc.ClientPreparedStatement: select s12.`CART_PRODUCT_STATUS` from `PRODUCTS` s11, `CART` s12 where (s11.`PRODUCT_QUANTITY` >= s12.`CART_PRODUCT_QUANTITY`) and (s11.`CART_PRODUCT_ID` = s12.`CART_ID`)
10:05:28.297 [mydb-1] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 6ms
10:05:28.317 [mydb-1] DEBUG slick.jdbc.StatementInvoker.result - /---------------------\
10:05:28.317 [mydb-1] DEBUG slick.jdbc.StatementInvoker.result - | 1                   |
10:05:28.317 [mydb-1] DEBUG slick.jdbc.StatementInvoker.result - | CART_PRODUCT_STATUS |
10:05:28.317 [mydb-1] DEBUG slick.jdbc.StatementInvoker.result - |---------------------|
10:05:28.317 [mydb-1] DEBUG slick.jdbc.StatementInvoker.result - | In stock            |
10:05:28.317 [mydb-1] DEBUG slick.jdbc.StatementInvoker.result - | In stock            |
10:05:28.317 [mydb-1] DEBUG slick.jdbc.StatementInvoker.result - | In stock            |
10:05:28.317 [mydb-1] DEBUG slick.jdbc.StatementInvoker.result - \---------------------/
10:05:28.324 [main] DEBUG slick.compiler.QueryCompiler - Source:
| Bind
|   from s2: Filter s3
|     from s3: Join Inner
|       left s4: TableExpansion
|         table s6: Table PRODUCTS
|         columns: TypeMapping
|           0: ProductNode
|             1: Path s6.PRODUCT_ID : Int'
|             2: Path s6.PRODUCT_NAME : String'
|             3: Path s6.PRODUCT_PRICE : Float'
|             4: Path s6.PRODUCT_TYPE : String'
|             5: Path s6.PRODUCT_QUANTITY : Int'
|             6: Path s6.IS_DELETED : Boolean'
|             7: Path s6.CART_PRODUCT_ID : Int'
|       right s5: TableExpansion
|         table s7: Table CART
|         columns: TypeMapping
|           0: ProductNode
|             1: Path s7.CART_ID : Int'
|             2: Path s7.CART_PRODUCT_QUANTITY : Int'
|             3: Path s7.CART_PRODUCT_STATUS : String'
|             4: Path s7.CART_USER_ID : Int'
|             5: Path s7.CART_TOTAL : Float'
|       on: Apply Function =
|         0: Path s4.CART_PRODUCT_ID : Int'
|         1: Path s5.CART_ID : Int'
|     where: Apply Function <
|       0: Path s3._1.PRODUCT_QUANTITY : Int'
|       1: Path s3._2.CART_PRODUCT_QUANTITY : Int'
|   select: Pure t8
|     value: Path s2._2.CART_PRODUCT_STATUS : String'

10:05:28.325 [main] DEBUG slick.compiler.AssignUniqueSymbols - Detected features: UsedFeatures(false,true,false,false)
10:05:28.327 [main] DEBUG slick.compiler.QueryCompiler - After phase assignUniqueSymbols:
| Bind
|   from s9: Filter s10
|     from s10: Join Inner
|       left s11: TableExpansion
|         table s13: Table PRODUCTS
|         columns: TypeMapping
|           0: ProductNode
|             1: Path s13.PRODUCT_ID : Int'
|             2: Path s13.PRODUCT_NAME : String'
|             3: Path s13.PRODUCT_PRICE : Float'
|             4: Path s13.PRODUCT_TYPE : String'
|             5: Path s13.PRODUCT_QUANTITY : Int'
|             6: Path s13.IS_DELETED : Boolean'
|             7: Path s13.CART_PRODUCT_ID : Int'
|       right s12: TableExpansion
|         table s15: Table CART
|         columns: TypeMapping
|           0: ProductNode
|             1: Path s15.CART_ID : Int'
|             2: Path s15.CART_PRODUCT_QUANTITY : Int'
|             3: Path s15.CART_PRODUCT_STATUS : String'
|             4: Path s15.CART_USER_ID : Int'
|             5: Path s15.CART_TOTAL : Float'
|       on: Apply Function =
|         0: Path s11.CART_PRODUCT_ID : Int'
|         1: Path s12.CART_ID : Int'
|     where: Apply Function <
|       0: Path s10._1.PRODUCT_QUANTITY : Int'
|       1: Path s10._2.CART_PRODUCT_QUANTITY : Int'
|   select: Pure t17
|     value: Path s9._2.CART_PRODUCT_STATUS : String'

10:05:28.328 [main] DEBUG slick.compiler.QueryCompiler - After phase unrollTailBinds: (no change)
10:05:28.328 [main] DEBUG slick.compiler.QueryCompiler - After phase inferTypes: (no change)
10:05:28.329 [main] DEBUG slick.compiler.ExpandTables - Found Selects for NominalTypes: @(slick.jdbc.MySQLProfile$._.CART), @(slick.jdbc.MySQLProfile$._.PRODUCTS)
10:05:28.331 [main] DEBUG slick.compiler.ExpandTables - With correct table types:
| Bind : Vector[t17<String'>]
|   from s9: Filter s10 : Vector[(@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>, @t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>)]
|     from s10: Join Inner : Vector[(@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>, @t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>)]
|       left s11: Table PRODUCTS : Vector[@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]
|       right s12: Table CART : Vector[@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]
|       on: Apply Function = : Boolean
|         0: Path s11.CART_PRODUCT_ID : Int'
|         1: Path s12.CART_ID : Int'
|     where: Apply Function < : Boolean
|       0: Path s10._1.PRODUCT_QUANTITY : Int'
|       1: Path s10._2.CART_PRODUCT_QUANTITY : Int'
|   select: Pure t17 : Vector[t17<String'>]
|     value: Path s9._2.CART_PRODUCT_STATUS : String'

10:05:28.331 [main] DEBUG slick.compiler.ExpandTables - Table expansions: @t16 -> (s15,TypeMapping), @t14 -> (s13,TypeMapping)
10:05:28.333 [main] DEBUG slick.compiler.QueryCompiler - After phase expandTables:
| Bind : Vector[t17<String'>]
|   from s9: Filter s10 : Vector[(@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>, @t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>)]
|     from s10: Join Inner : Vector[(@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>, @t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>)]
|       left s11: Table PRODUCTS : Vector[@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]
|       right s12: Table CART : Vector[@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]
|       on: Apply Function = : Boolean
|         0: Path s11.CART_PRODUCT_ID : Int'
|         1: Path s12.CART_ID : Int'
|     where: Apply Function < : Boolean
|       0: Path s10._1.PRODUCT_QUANTITY : Int'
|       1: Path s10._2.CART_PRODUCT_QUANTITY : Int'
|   select: Pure t17 : Vector[t17<String'>]
|     value: Path s9._2.CART_PRODUCT_STATUS : String'

10:05:28.333 [main] DEBUG slick.compiler.ForceOuterBinds - Introducing new Bind s18 for Table PRODUCTS
10:05:28.334 [main] DEBUG slick.compiler.ForceOuterBinds - Introducing new Bind s19 for Table CART
10:05:28.334 [main] DEBUG slick.compiler.ForceOuterBinds - Introducing new Bind s20 for Join Inner
10:05:28.336 [main] DEBUG slick.compiler.QueryCompiler - After phase forceOuterBinds:
| Bind : Vector[t17<String'>]
|   from s9: Filter s10 : Vector[t21<(t22<@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>>, t23<@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>>)>]
|     from s10: Bind : Vector[t21<(t22<@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>>, t23<@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>>)>]
|       from s20: Join Inner : Vector[(t22<@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>>, t23<@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>>)]
|         left s11: Bind : Vector[t22<@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>>]
|           from s18: Table PRODUCTS : Vector[@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]
|           select: Pure t22 : Vector[t22<@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>>]
|             value: Ref s18 : @t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>
|         right s12: Bind : Vector[t23<@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>>]
|           from s19: Table CART : Vector[@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]
|           select: Pure t23 : Vector[t23<@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>>]
|             value: Ref s19 : @t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>
|         on: Apply Function = : Boolean
|           0: Path s11.CART_PRODUCT_ID : Int'
|           1: Path s12.CART_ID : Int'
|       select: Pure t21 : Vector[t21<(t22<@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>>, t23<@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>>)>]
|         value: Ref s20 : (t22<@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>>, t23<@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>>)
|     where: Apply Function < : Boolean
|       0: Path s10._1.PRODUCT_QUANTITY : Int'
|       1: Path s10._2.CART_PRODUCT_QUANTITY : Int'
|   select: Pure t17 : Vector[t17<String'>]
|     value: Path s9._2.CART_PRODUCT_STATUS : String'

10:05:28.337 [main] DEBUG slick.compiler.QueryCompiler - After phase removeMappedTypes: (no change)
10:05:28.337 [main] DEBUG slick.compiler.QueryCompiler - After phase expandSums: (no change)
10:05:28.338 [main] DEBUG slick.compiler.QueryCompiler - After phase emulateOuterJoins: (no change)
10:05:28.343 [main] DEBUG slick.compiler.QueryCompiler - After phase expandRecords:
| Bind : Vector[t17<String'>]
|   from s9: Filter s10 : Vector[t21<({PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}, {CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'})>]
|     from s10: Bind : Vector[t21<({PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}, {CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'})>]
|       from s20: Join Inner : Vector[(t22<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>, t23<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>)]
|         left s11: Bind : Vector[t22<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]
|           from s18: Table PRODUCTS : Vector[@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]
|           select: Pure t22 : Vector[t22<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]
|             value: StructNode : {PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}
|               PRODUCT_NAME: Path s18.PRODUCT_NAME : String'
|               CART_PRODUCT_ID: Path s18.CART_PRODUCT_ID : Int'
|               PRODUCT_QUANTITY: Path s18.PRODUCT_QUANTITY : Int'
|               IS_DELETED: Path s18.IS_DELETED : Boolean'
|               PRODUCT_TYPE: Path s18.PRODUCT_TYPE : String'
|               PRODUCT_ID: Path s18.PRODUCT_ID : Int'
|               PRODUCT_PRICE: Path s18.PRODUCT_PRICE : Float'
|         right s12: Bind : Vector[t23<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]
|           from s19: Table CART : Vector[@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]
|           select: Pure t23 : Vector[t23<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]
|             value: StructNode : {CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}
|               CART_ID: Path s19.CART_ID : Int'
|               CART_PRODUCT_STATUS: Path s19.CART_PRODUCT_STATUS : String'
|               CART_TOTAL: Path s19.CART_TOTAL : Float'
|               CART_PRODUCT_QUANTITY: Path s19.CART_PRODUCT_QUANTITY : Int'
|               CART_USER_ID: Path s19.CART_USER_ID : Int'
|         on: Apply Function = : Boolean
|           0: Path s11.CART_PRODUCT_ID : Int'
|           1: Path s12.CART_ID : Int'
|       select: Pure t21 : Vector[t21<({PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}, {CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'})>]
|         value: ProductNode : ({PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}, {CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'})
|           1: StructNode : {PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}
|             PRODUCT_NAME: Path s20._1.PRODUCT_NAME : String'
|             CART_PRODUCT_ID: Path s20._1.CART_PRODUCT_ID : Int'
|             PRODUCT_QUANTITY: Path s20._1.PRODUCT_QUANTITY : Int'
|             IS_DELETED: Path s20._1.IS_DELETED : Boolean'
|             PRODUCT_TYPE: Path s20._1.PRODUCT_TYPE : String'
|             PRODUCT_ID: Path s20._1.PRODUCT_ID : Int'
|             PRODUCT_PRICE: Path s20._1.PRODUCT_PRICE : Float'
|           2: StructNode : {CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}
|             CART_ID: Path s20._2.CART_ID : Int'
|             CART_PRODUCT_STATUS: Path s20._2.CART_PRODUCT_STATUS : String'
|             CART_TOTAL: Path s20._2.CART_TOTAL : Float'
|             CART_PRODUCT_QUANTITY: Path s20._2.CART_PRODUCT_QUANTITY : Int'
|             CART_USER_ID: Path s20._2.CART_USER_ID : Int'
|     where: Apply Function < : Boolean
|       0: Path s10._1.PRODUCT_QUANTITY : Int'
|       1: Path s10._2.CART_PRODUCT_QUANTITY : Int'
|   select: Pure t17 : Vector[t17<String'>]
|     value: Path s9._2.CART_PRODUCT_STATUS : String'

10:05:28.343 [main] DEBUG slick.compiler.FlattenProjections - Flattening projection t22
10:05:28.344 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s18.PRODUCT_NAME with symbols 
| Path s18.PRODUCT_NAME : String'

10:05:28.344 [main] DEBUG slick.compiler.FlattenProjections - Translated s18.PRODUCT_NAME to:
| Path s18.PRODUCT_NAME

10:05:28.344 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s18.CART_PRODUCT_ID with symbols 
| Path s18.CART_PRODUCT_ID : Int'

10:05:28.344 [main] DEBUG slick.compiler.FlattenProjections - Translated s18.CART_PRODUCT_ID to:
| Path s18.CART_PRODUCT_ID

10:05:28.344 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s18.PRODUCT_QUANTITY with symbols 
| Path s18.PRODUCT_QUANTITY : Int'

10:05:28.344 [main] DEBUG slick.compiler.FlattenProjections - Translated s18.PRODUCT_QUANTITY to:
| Path s18.PRODUCT_QUANTITY

10:05:28.344 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s18.IS_DELETED with symbols 
| Path s18.IS_DELETED : Boolean'

10:05:28.344 [main] DEBUG slick.compiler.FlattenProjections - Translated s18.IS_DELETED to:
| Path s18.IS_DELETED

10:05:28.344 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s18.PRODUCT_TYPE with symbols 
| Path s18.PRODUCT_TYPE : String'

10:05:28.344 [main] DEBUG slick.compiler.FlattenProjections - Translated s18.PRODUCT_TYPE to:
| Path s18.PRODUCT_TYPE

10:05:28.345 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s18.PRODUCT_ID with symbols 
| Path s18.PRODUCT_ID : Int'

10:05:28.345 [main] DEBUG slick.compiler.FlattenProjections - Translated s18.PRODUCT_ID to:
| Path s18.PRODUCT_ID

10:05:28.345 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s18.PRODUCT_PRICE with symbols 
| Path s18.PRODUCT_PRICE : Float'

10:05:28.345 [main] DEBUG slick.compiler.FlattenProjections - Translated s18.PRODUCT_PRICE to:
| Path s18.PRODUCT_PRICE

10:05:28.345 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path 
| StructNode
|   PRODUCT_NAME: Path s18.PRODUCT_NAME
|   CART_PRODUCT_ID: Path s18.CART_PRODUCT_ID
|   PRODUCT_QUANTITY: Path s18.PRODUCT_QUANTITY
|   IS_DELETED: Path s18.IS_DELETED
|   PRODUCT_TYPE: Path s18.PRODUCT_TYPE
|   PRODUCT_ID: Path s18.PRODUCT_ID
|   PRODUCT_PRICE: Path s18.PRODUCT_PRICE

10:05:28.345 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path PRODUCT_NAME
| Path s18.PRODUCT_NAME

10:05:28.346 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s24 -> Path s18.PRODUCT_NAME
10:05:28.346 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path CART_PRODUCT_ID
| Path s18.CART_PRODUCT_ID

10:05:28.346 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s25 -> Path s18.CART_PRODUCT_ID
10:05:28.346 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path PRODUCT_QUANTITY
| Path s18.PRODUCT_QUANTITY

10:05:28.346 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s26 -> Path s18.PRODUCT_QUANTITY
10:05:28.346 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path IS_DELETED
| Path s18.IS_DELETED

10:05:28.346 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s27 -> Path s18.IS_DELETED
10:05:28.346 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path PRODUCT_TYPE
| Path s18.PRODUCT_TYPE

10:05:28.346 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s28 -> Path s18.PRODUCT_TYPE
10:05:28.346 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path PRODUCT_ID
| Path s18.PRODUCT_ID

10:05:28.347 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s29 -> Path s18.PRODUCT_ID
10:05:28.347 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path PRODUCT_PRICE
| Path s18.PRODUCT_PRICE

10:05:28.347 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s30 -> Path s18.PRODUCT_PRICE
10:05:28.347 [main] DEBUG slick.compiler.FlattenProjections - Adding translation for t22: (HashMap(List(CART_PRODUCT_ID) -> s25, List(PRODUCT_ID) -> s29, List(PRODUCT_PRICE) -> s30, List(PRODUCT_NAME) -> s24, List(IS_DELETED) -> s27, List(PRODUCT_QUANTITY) -> s26, List(PRODUCT_TYPE) -> s28), UnassignedType)
10:05:28.348 [main] DEBUG slick.compiler.FlattenProjections - Flattened projection to
| Pure t22
|   value: StructNode
|     s24: Path s18.PRODUCT_NAME
|     s25: Path s18.CART_PRODUCT_ID
|     s26: Path s18.PRODUCT_QUANTITY
|     s27: Path s18.IS_DELETED
|     s28: Path s18.PRODUCT_TYPE
|     s29: Path s18.PRODUCT_ID
|     s30: Path s18.PRODUCT_PRICE

10:05:28.348 [main] DEBUG slick.compiler.FlattenProjections - Flattening projection t23
10:05:28.348 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s19.CART_ID with symbols t22
| Path s19.CART_ID : Int'

10:05:28.348 [main] DEBUG slick.compiler.FlattenProjections - Translated s19.CART_ID to:
| Path s19.CART_ID

10:05:28.348 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s19.CART_PRODUCT_STATUS with symbols t22
| Path s19.CART_PRODUCT_STATUS : String'

10:05:28.348 [main] DEBUG slick.compiler.FlattenProjections - Translated s19.CART_PRODUCT_STATUS to:
| Path s19.CART_PRODUCT_STATUS

10:05:28.348 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s19.CART_TOTAL with symbols t22
| Path s19.CART_TOTAL : Float'

10:05:28.348 [main] DEBUG slick.compiler.FlattenProjections - Translated s19.CART_TOTAL to:
| Path s19.CART_TOTAL

10:05:28.348 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s19.CART_PRODUCT_QUANTITY with symbols t22
| Path s19.CART_PRODUCT_QUANTITY : Int'

10:05:28.349 [main] DEBUG slick.compiler.FlattenProjections - Translated s19.CART_PRODUCT_QUANTITY to:
| Path s19.CART_PRODUCT_QUANTITY

10:05:28.349 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s19.CART_USER_ID with symbols t22
| Path s19.CART_USER_ID : Int'

10:05:28.349 [main] DEBUG slick.compiler.FlattenProjections - Translated s19.CART_USER_ID to:
| Path s19.CART_USER_ID

10:05:28.349 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path 
| StructNode
|   CART_ID: Path s19.CART_ID
|   CART_PRODUCT_STATUS: Path s19.CART_PRODUCT_STATUS
|   CART_TOTAL: Path s19.CART_TOTAL
|   CART_PRODUCT_QUANTITY: Path s19.CART_PRODUCT_QUANTITY
|   CART_USER_ID: Path s19.CART_USER_ID

10:05:28.349 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path CART_ID
| Path s19.CART_ID

10:05:28.349 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s31 -> Path s19.CART_ID
10:05:28.349 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path CART_PRODUCT_STATUS
| Path s19.CART_PRODUCT_STATUS

10:05:28.349 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s32 -> Path s19.CART_PRODUCT_STATUS
10:05:28.350 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path CART_TOTAL
| Path s19.CART_TOTAL

10:05:28.350 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s33 -> Path s19.CART_TOTAL
10:05:28.350 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path CART_PRODUCT_QUANTITY
| Path s19.CART_PRODUCT_QUANTITY

10:05:28.350 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s34 -> Path s19.CART_PRODUCT_QUANTITY
10:05:28.350 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path CART_USER_ID
| Path s19.CART_USER_ID

10:05:28.350 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s35 -> Path s19.CART_USER_ID
10:05:28.350 [main] DEBUG slick.compiler.FlattenProjections - Adding translation for t23: (HashMap(List(CART_PRODUCT_STATUS) -> s32, List(CART_USER_ID) -> s35, List(CART_TOTAL) -> s33, List(CART_ID) -> s31, List(CART_PRODUCT_QUANTITY) -> s34), UnassignedType)
10:05:28.351 [main] DEBUG slick.compiler.FlattenProjections - Flattened projection to
| Pure t23
|   value: StructNode
|     s31: Path s19.CART_ID
|     s32: Path s19.CART_PRODUCT_STATUS
|     s33: Path s19.CART_TOTAL
|     s34: Path s19.CART_PRODUCT_QUANTITY
|     s35: Path s19.CART_USER_ID

10:05:28.351 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s11.CART_PRODUCT_ID with symbols t23, t22
| Path s11.CART_PRODUCT_ID : Int'

10:05:28.351 [main] DEBUG slick.compiler.FlattenProjections - Found s11.CART_PRODUCT_ID with local part Path CART_PRODUCT_ID over t22
10:05:28.351 [main] DEBUG slick.compiler.FlattenProjections -   Translation for t22: HashMap(List(CART_PRODUCT_ID) -> s25, List(PRODUCT_ID) -> s29, List(PRODUCT_PRICE) -> s30, List(PRODUCT_NAME) -> s24, List(IS_DELETED) -> s27, List(PRODUCT_QUANTITY) -> s26, List(PRODUCT_TYPE) -> s28)
10:05:28.351 [main] DEBUG slick.compiler.FlattenProjections - Translated s11.CART_PRODUCT_ID to:
| Path s11.s25

10:05:28.351 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s12.CART_ID with symbols t23, t22
| Path s12.CART_ID : Int'

10:05:28.351 [main] DEBUG slick.compiler.FlattenProjections - Found s12.CART_ID with local part Path CART_ID over t23
10:05:28.351 [main] DEBUG slick.compiler.FlattenProjections -   Translation for t23: HashMap(List(CART_PRODUCT_STATUS) -> s32, List(CART_USER_ID) -> s35, List(CART_TOTAL) -> s33, List(CART_ID) -> s31, List(CART_PRODUCT_QUANTITY) -> s34)
10:05:28.351 [main] DEBUG slick.compiler.FlattenProjections - Translated s12.CART_ID to:
| Path s12.s31

10:05:28.351 [main] DEBUG slick.compiler.FlattenProjections - Flattening projection t21
10:05:28.351 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s20._1.PRODUCT_NAME with symbols t23, t22
| Path s20._1.PRODUCT_NAME : String'

10:05:28.351 [main] DEBUG slick.compiler.FlattenProjections - Found s20._1.PRODUCT_NAME with local part Path PRODUCT_NAME over t22
10:05:28.352 [main] DEBUG slick.compiler.FlattenProjections -   Translation for t22: HashMap(List(CART_PRODUCT_ID) -> s25, List(PRODUCT_ID) -> s29, List(PRODUCT_PRICE) -> s30, List(PRODUCT_NAME) -> s24, List(IS_DELETED) -> s27, List(PRODUCT_QUANTITY) -> s26, List(PRODUCT_TYPE) -> s28)
10:05:28.352 [main] DEBUG slick.compiler.FlattenProjections - Translated s20._1.PRODUCT_NAME to:
| Path s20._1.s24

10:05:28.352 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s20._1.CART_PRODUCT_ID with symbols t23, t22
| Path s20._1.CART_PRODUCT_ID : Int'

10:05:28.352 [main] DEBUG slick.compiler.FlattenProjections - Found s20._1.CART_PRODUCT_ID with local part Path CART_PRODUCT_ID over t22
10:05:28.352 [main] DEBUG slick.compiler.FlattenProjections -   Translation for t22: HashMap(List(CART_PRODUCT_ID) -> s25, List(PRODUCT_ID) -> s29, List(PRODUCT_PRICE) -> s30, List(PRODUCT_NAME) -> s24, List(IS_DELETED) -> s27, List(PRODUCT_QUANTITY) -> s26, List(PRODUCT_TYPE) -> s28)
10:05:28.352 [main] DEBUG slick.compiler.FlattenProjections - Translated s20._1.CART_PRODUCT_ID to:
| Path s20._1.s25

10:05:28.352 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s20._1.PRODUCT_QUANTITY with symbols t23, t22
| Path s20._1.PRODUCT_QUANTITY : Int'

10:05:28.352 [main] DEBUG slick.compiler.FlattenProjections - Found s20._1.PRODUCT_QUANTITY with local part Path PRODUCT_QUANTITY over t22
10:05:28.352 [main] DEBUG slick.compiler.FlattenProjections -   Translation for t22: HashMap(List(CART_PRODUCT_ID) -> s25, List(PRODUCT_ID) -> s29, List(PRODUCT_PRICE) -> s30, List(PRODUCT_NAME) -> s24, List(IS_DELETED) -> s27, List(PRODUCT_QUANTITY) -> s26, List(PRODUCT_TYPE) -> s28)
10:05:28.352 [main] DEBUG slick.compiler.FlattenProjections - Translated s20._1.PRODUCT_QUANTITY to:
| Path s20._1.s26

10:05:28.352 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s20._1.IS_DELETED with symbols t23, t22
| Path s20._1.IS_DELETED : Boolean'

10:05:28.353 [main] DEBUG slick.compiler.FlattenProjections - Found s20._1.IS_DELETED with local part Path IS_DELETED over t22
10:05:28.353 [main] DEBUG slick.compiler.FlattenProjections -   Translation for t22: HashMap(List(CART_PRODUCT_ID) -> s25, List(PRODUCT_ID) -> s29, List(PRODUCT_PRICE) -> s30, List(PRODUCT_NAME) -> s24, List(IS_DELETED) -> s27, List(PRODUCT_QUANTITY) -> s26, List(PRODUCT_TYPE) -> s28)
10:05:28.353 [main] DEBUG slick.compiler.FlattenProjections - Translated s20._1.IS_DELETED to:
| Path s20._1.s27

10:05:28.353 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s20._1.PRODUCT_TYPE with symbols t23, t22
| Path s20._1.PRODUCT_TYPE : String'

10:05:28.353 [main] DEBUG slick.compiler.FlattenProjections - Found s20._1.PRODUCT_TYPE with local part Path PRODUCT_TYPE over t22
10:05:28.353 [main] DEBUG slick.compiler.FlattenProjections -   Translation for t22: HashMap(List(CART_PRODUCT_ID) -> s25, List(PRODUCT_ID) -> s29, List(PRODUCT_PRICE) -> s30, List(PRODUCT_NAME) -> s24, List(IS_DELETED) -> s27, List(PRODUCT_QUANTITY) -> s26, List(PRODUCT_TYPE) -> s28)
10:05:28.353 [main] DEBUG slick.compiler.FlattenProjections - Translated s20._1.PRODUCT_TYPE to:
| Path s20._1.s28

10:05:28.353 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s20._1.PRODUCT_ID with symbols t23, t22
| Path s20._1.PRODUCT_ID : Int'

10:05:28.353 [main] DEBUG slick.compiler.FlattenProjections - Found s20._1.PRODUCT_ID with local part Path PRODUCT_ID over t22
10:05:28.354 [main] DEBUG slick.compiler.FlattenProjections -   Translation for t22: HashMap(List(CART_PRODUCT_ID) -> s25, List(PRODUCT_ID) -> s29, List(PRODUCT_PRICE) -> s30, List(PRODUCT_NAME) -> s24, List(IS_DELETED) -> s27, List(PRODUCT_QUANTITY) -> s26, List(PRODUCT_TYPE) -> s28)
10:05:28.354 [main] DEBUG slick.compiler.FlattenProjections - Translated s20._1.PRODUCT_ID to:
| Path s20._1.s29

10:05:28.354 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s20._1.PRODUCT_PRICE with symbols t23, t22
| Path s20._1.PRODUCT_PRICE : Float'

10:05:28.354 [main] DEBUG slick.compiler.FlattenProjections - Found s20._1.PRODUCT_PRICE with local part Path PRODUCT_PRICE over t22
10:05:28.354 [main] DEBUG slick.compiler.FlattenProjections -   Translation for t22: HashMap(List(CART_PRODUCT_ID) -> s25, List(PRODUCT_ID) -> s29, List(PRODUCT_PRICE) -> s30, List(PRODUCT_NAME) -> s24, List(IS_DELETED) -> s27, List(PRODUCT_QUANTITY) -> s26, List(PRODUCT_TYPE) -> s28)
10:05:28.354 [main] DEBUG slick.compiler.FlattenProjections - Translated s20._1.PRODUCT_PRICE to:
| Path s20._1.s30

10:05:28.354 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s20._2.CART_ID with symbols t23, t22
| Path s20._2.CART_ID : Int'

10:05:28.355 [main] DEBUG slick.compiler.FlattenProjections - Found s20._2.CART_ID with local part Path CART_ID over t23
10:05:28.355 [main] DEBUG slick.compiler.FlattenProjections -   Translation for t23: HashMap(List(CART_PRODUCT_STATUS) -> s32, List(CART_USER_ID) -> s35, List(CART_TOTAL) -> s33, List(CART_ID) -> s31, List(CART_PRODUCT_QUANTITY) -> s34)
10:05:28.355 [main] DEBUG slick.compiler.FlattenProjections - Translated s20._2.CART_ID to:
| Path s20._2.s31

10:05:28.355 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s20._2.CART_PRODUCT_STATUS with symbols t23, t22
| Path s20._2.CART_PRODUCT_STATUS : String'

10:05:28.355 [main] DEBUG slick.compiler.FlattenProjections - Found s20._2.CART_PRODUCT_STATUS with local part Path CART_PRODUCT_STATUS over t23
10:05:28.355 [main] DEBUG slick.compiler.FlattenProjections -   Translation for t23: HashMap(List(CART_PRODUCT_STATUS) -> s32, List(CART_USER_ID) -> s35, List(CART_TOTAL) -> s33, List(CART_ID) -> s31, List(CART_PRODUCT_QUANTITY) -> s34)
10:05:28.355 [main] DEBUG slick.compiler.FlattenProjections - Translated s20._2.CART_PRODUCT_STATUS to:
| Path s20._2.s32

10:05:28.355 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s20._2.CART_TOTAL with symbols t23, t22
| Path s20._2.CART_TOTAL : Float'

10:05:28.355 [main] DEBUG slick.compiler.FlattenProjections - Found s20._2.CART_TOTAL with local part Path CART_TOTAL over t23
10:05:28.355 [main] DEBUG slick.compiler.FlattenProjections -   Translation for t23: HashMap(List(CART_PRODUCT_STATUS) -> s32, List(CART_USER_ID) -> s35, List(CART_TOTAL) -> s33, List(CART_ID) -> s31, List(CART_PRODUCT_QUANTITY) -> s34)
10:05:28.356 [main] DEBUG slick.compiler.FlattenProjections - Translated s20._2.CART_TOTAL to:
| Path s20._2.s33

10:05:28.356 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s20._2.CART_PRODUCT_QUANTITY with symbols t23, t22
| Path s20._2.CART_PRODUCT_QUANTITY : Int'

10:05:28.356 [main] DEBUG slick.compiler.FlattenProjections - Found s20._2.CART_PRODUCT_QUANTITY with local part Path CART_PRODUCT_QUANTITY over t23
10:05:28.356 [main] DEBUG slick.compiler.FlattenProjections -   Translation for t23: HashMap(List(CART_PRODUCT_STATUS) -> s32, List(CART_USER_ID) -> s35, List(CART_TOTAL) -> s33, List(CART_ID) -> s31, List(CART_PRODUCT_QUANTITY) -> s34)
10:05:28.356 [main] DEBUG slick.compiler.FlattenProjections - Translated s20._2.CART_PRODUCT_QUANTITY to:
| Path s20._2.s34

10:05:28.356 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s20._2.CART_USER_ID with symbols t23, t22
| Path s20._2.CART_USER_ID : Int'

10:05:28.356 [main] DEBUG slick.compiler.FlattenProjections - Found s20._2.CART_USER_ID with local part Path CART_USER_ID over t23
10:05:28.356 [main] DEBUG slick.compiler.FlattenProjections -   Translation for t23: HashMap(List(CART_PRODUCT_STATUS) -> s32, List(CART_USER_ID) -> s35, List(CART_TOTAL) -> s33, List(CART_ID) -> s31, List(CART_PRODUCT_QUANTITY) -> s34)
10:05:28.356 [main] DEBUG slick.compiler.FlattenProjections - Translated s20._2.CART_USER_ID to:
| Path s20._2.s35

10:05:28.357 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path 
| ProductNode
|   1: StructNode
|     PRODUCT_NAME: Path s20._1.s24
|     CART_PRODUCT_ID: Path s20._1.s25
|     PRODUCT_QUANTITY: Path s20._1.s26
|     IS_DELETED: Path s20._1.s27
|     PRODUCT_TYPE: Path s20._1.s28
|     PRODUCT_ID: Path s20._1.s29
|     PRODUCT_PRICE: Path s20._1.s30
|   2: StructNode
|     CART_ID: Path s20._2.s31
|     CART_PRODUCT_STATUS: Path s20._2.s32
|     CART_TOTAL: Path s20._2.s33
|     CART_PRODUCT_QUANTITY: Path s20._2.s34
|     CART_USER_ID: Path s20._2.s35

10:05:28.358 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path _1
| StructNode
|   PRODUCT_NAME: Path s20._1.s24
|   CART_PRODUCT_ID: Path s20._1.s25
|   PRODUCT_QUANTITY: Path s20._1.s26
|   IS_DELETED: Path s20._1.s27
|   PRODUCT_TYPE: Path s20._1.s28
|   PRODUCT_ID: Path s20._1.s29
|   PRODUCT_PRICE: Path s20._1.s30

10:05:28.358 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path _1.PRODUCT_NAME
| Path s20._1.s24

10:05:28.358 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s36 -> Path s20._1.s24
10:05:28.358 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path _1.CART_PRODUCT_ID
| Path s20._1.s25

10:05:28.358 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s37 -> Path s20._1.s25
10:05:28.358 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path _1.PRODUCT_QUANTITY
| Path s20._1.s26

10:05:28.358 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s38 -> Path s20._1.s26
10:05:28.358 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path _1.IS_DELETED
| Path s20._1.s27

10:05:28.358 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s39 -> Path s20._1.s27
10:05:28.358 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path _1.PRODUCT_TYPE
| Path s20._1.s28

10:05:28.358 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s40 -> Path s20._1.s28
10:05:28.359 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path _1.PRODUCT_ID
| Path s20._1.s29

10:05:28.359 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s41 -> Path s20._1.s29
10:05:28.359 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path _1.PRODUCT_PRICE
| Path s20._1.s30

10:05:28.359 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s42 -> Path s20._1.s30
10:05:28.359 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path _2
| StructNode
|   CART_ID: Path s20._2.s31
|   CART_PRODUCT_STATUS: Path s20._2.s32
|   CART_TOTAL: Path s20._2.s33
|   CART_PRODUCT_QUANTITY: Path s20._2.s34
|   CART_USER_ID: Path s20._2.s35

10:05:28.359 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path _2.CART_ID
| Path s20._2.s31

10:05:28.359 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s43 -> Path s20._2.s31
10:05:28.359 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path _2.CART_PRODUCT_STATUS
| Path s20._2.s32

10:05:28.359 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s44 -> Path s20._2.s32
10:05:28.360 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path _2.CART_TOTAL
| Path s20._2.s33

10:05:28.360 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s45 -> Path s20._2.s33
10:05:28.360 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path _2.CART_PRODUCT_QUANTITY
| Path s20._2.s34

10:05:28.360 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s46 -> Path s20._2.s34
10:05:28.360 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path _2.CART_USER_ID
| Path s20._2.s35

10:05:28.360 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s47 -> Path s20._2.s35
10:05:28.360 [main] DEBUG slick.compiler.FlattenProjections - Adding translation for t21: (HashMap(List(CART_PRODUCT_ID, _1) -> s37, List(CART_USER_ID, _2) -> s47, List(CART_PRODUCT_STATUS, _2) -> s44, List(PRODUCT_NAME, _1) -> s36, List(PRODUCT_TYPE, _1) -> s40, List(CART_TOTAL, _2) -> s45, List(PRODUCT_ID, _1) -> s41, List(CART_PRODUCT_QUANTITY, _2) -> s46, List(PRODUCT_PRICE, _1) -> s42, List(IS_DELETED, _1) -> s39, List(CART_ID, _2) -> s43, List(PRODUCT_QUANTITY, _1) -> s38), UnassignedType)
10:05:28.361 [main] DEBUG slick.compiler.FlattenProjections - Flattened projection to
| Pure t21
|   value: StructNode
|     s36: Path s20._1.s24
|     s37: Path s20._1.s25
|     s38: Path s20._1.s26
|     s39: Path s20._1.s27
|     s40: Path s20._1.s28
|     s41: Path s20._1.s29
|     s42: Path s20._1.s30
|     s43: Path s20._2.s31
|     s44: Path s20._2.s32
|     s45: Path s20._2.s33
|     s46: Path s20._2.s34
|     s47: Path s20._2.s35

10:05:28.361 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s10._1.PRODUCT_QUANTITY with symbols t23, t21, t22
| Path s10._1.PRODUCT_QUANTITY : Int'

10:05:28.361 [main] DEBUG slick.compiler.FlattenProjections - Found s10._1.PRODUCT_QUANTITY with local part Path _1.PRODUCT_QUANTITY over t21
10:05:28.361 [main] DEBUG slick.compiler.FlattenProjections -   Translation for t21: HashMap(List(CART_PRODUCT_ID, _1) -> s37, List(CART_USER_ID, _2) -> s47, List(CART_PRODUCT_STATUS, _2) -> s44, List(PRODUCT_NAME, _1) -> s36, List(PRODUCT_TYPE, _1) -> s40, List(CART_TOTAL, _2) -> s45, List(PRODUCT_ID, _1) -> s41, List(CART_PRODUCT_QUANTITY, _2) -> s46, List(PRODUCT_PRICE, _1) -> s42, List(IS_DELETED, _1) -> s39, List(CART_ID, _2) -> s43, List(PRODUCT_QUANTITY, _1) -> s38)
10:05:28.361 [main] DEBUG slick.compiler.FlattenProjections - Translated s10._1.PRODUCT_QUANTITY to:
| Path s10.s38

10:05:28.362 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s10._2.CART_PRODUCT_QUANTITY with symbols t23, t21, t22
| Path s10._2.CART_PRODUCT_QUANTITY : Int'

10:05:28.362 [main] DEBUG slick.compiler.FlattenProjections - Found s10._2.CART_PRODUCT_QUANTITY with local part Path _2.CART_PRODUCT_QUANTITY over t21
10:05:28.362 [main] DEBUG slick.compiler.FlattenProjections -   Translation for t21: HashMap(List(CART_PRODUCT_ID, _1) -> s37, List(CART_USER_ID, _2) -> s47, List(CART_PRODUCT_STATUS, _2) -> s44, List(PRODUCT_NAME, _1) -> s36, List(PRODUCT_TYPE, _1) -> s40, List(CART_TOTAL, _2) -> s45, List(PRODUCT_ID, _1) -> s41, List(CART_PRODUCT_QUANTITY, _2) -> s46, List(PRODUCT_PRICE, _1) -> s42, List(IS_DELETED, _1) -> s39, List(CART_ID, _2) -> s43, List(PRODUCT_QUANTITY, _1) -> s38)
10:05:28.362 [main] DEBUG slick.compiler.FlattenProjections - Translated s10._2.CART_PRODUCT_QUANTITY to:
| Path s10.s46

10:05:28.362 [main] DEBUG slick.compiler.FlattenProjections - Flattening projection t17
10:05:28.362 [main] DEBUG slick.compiler.FlattenProjections - Analyzing s9._2.CART_PRODUCT_STATUS with symbols t23, t21, t22
| Path s9._2.CART_PRODUCT_STATUS : String'

10:05:28.362 [main] DEBUG slick.compiler.FlattenProjections - Found s9._2.CART_PRODUCT_STATUS with local part Path _2.CART_PRODUCT_STATUS over t21
10:05:28.362 [main] DEBUG slick.compiler.FlattenProjections -   Translation for t21: HashMap(List(CART_PRODUCT_ID, _1) -> s37, List(CART_USER_ID, _2) -> s47, List(CART_PRODUCT_STATUS, _2) -> s44, List(PRODUCT_NAME, _1) -> s36, List(PRODUCT_TYPE, _1) -> s40, List(CART_TOTAL, _2) -> s45, List(PRODUCT_ID, _1) -> s41, List(CART_PRODUCT_QUANTITY, _2) -> s46, List(PRODUCT_PRICE, _1) -> s42, List(IS_DELETED, _1) -> s39, List(CART_ID, _2) -> s43, List(PRODUCT_QUANTITY, _1) -> s38)
10:05:28.362 [main] DEBUG slick.compiler.FlattenProjections - Translated s9._2.CART_PRODUCT_STATUS to:
| Path s9.s44

10:05:28.362 [main] DEBUG slick.compiler.FlattenProjections - Flattening node at Path 
| Path s9.s44

10:05:28.362 [main] DEBUG slick.compiler.FlattenProjections - Adding definition: s48 -> Path s9.s44
10:05:28.363 [main] DEBUG slick.compiler.FlattenProjections - Adding translation for t17: (Map(List() -> s48), UnassignedType)
10:05:28.363 [main] DEBUG slick.compiler.FlattenProjections - Flattened projection to
| Pure t17
|   value: StructNode
|     s48: Path s9.s44

10:05:28.367 [main] DEBUG slick.compiler.QueryCompiler - After phase flattenProjections:
| Bind : Vector[t17<{s48: String'}>]
|   from s9: Filter s10 : Vector[t21<{s36: String', s37: Int', s38: Int', s39: Boolean', s40: String', s41: Int', s42: Float', s43: Int', s44: String', s45: Float', s46: Int', s47: Int'}>]
|     from s10: Bind : Vector[t21<{s36: String', s37: Int', s38: Int', s39: Boolean', s40: String', s41: Int', s42: Float', s43: Int', s44: String', s45: Float', s46: Int', s47: Int'}>]
|       from s20: Join Inner : Vector[(t22<{s24: String', s25: Int', s26: Int', s27: Boolean', s28: String', s29: Int', s30: Float'}>, t23<{s31: Int', s32: String', s33: Float', s34: Int', s35: Int'}>)]
|         left s11: Bind : Vector[t22<{s24: String', s25: Int', s26: Int', s27: Boolean', s28: String', s29: Int', s30: Float'}>]
|           from s18: Table PRODUCTS : Vector[@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]
|           select: Pure t22 : Vector[t22<{s24: String', s25: Int', s26: Int', s27: Boolean', s28: String', s29: Int', s30: Float'}>]
|             value: StructNode : {s24: String', s25: Int', s26: Int', s27: Boolean', s28: String', s29: Int', s30: Float'}
|               s24: Path s18.PRODUCT_NAME : String'
|               s25: Path s18.CART_PRODUCT_ID : Int'
|               s26: Path s18.PRODUCT_QUANTITY : Int'
|               s27: Path s18.IS_DELETED : Boolean'
|               s28: Path s18.PRODUCT_TYPE : String'
|               s29: Path s18.PRODUCT_ID : Int'
|               s30: Path s18.PRODUCT_PRICE : Float'
|         right s12: Bind : Vector[t23<{s31: Int', s32: String', s33: Float', s34: Int', s35: Int'}>]
|           from s19: Table CART : Vector[@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]
|           select: Pure t23 : Vector[t23<{s31: Int', s32: String', s33: Float', s34: Int', s35: Int'}>]
|             value: StructNode : {s31: Int', s32: String', s33: Float', s34: Int', s35: Int'}
|               s31: Path s19.CART_ID : Int'
|               s32: Path s19.CART_PRODUCT_STATUS : String'
|               s33: Path s19.CART_TOTAL : Float'
|               s34: Path s19.CART_PRODUCT_QUANTITY : Int'
|               s35: Path s19.CART_USER_ID : Int'
|         on: Apply Function = : Boolean
|           0: Path s11.s25 : Int'
|           1: Path s12.s31 : Int'
|       select: Pure t21 : Vector[t21<{s36: String', s37: Int', s38: Int', s39: Boolean', s40: String', s41: Int', s42: Float', s43: Int', s44: String', s45: Float', s46: Int', s47: Int'}>]
|         value: StructNode : {s36: String', s37: Int', s38: Int', s39: Boolean', s40: String', s41: Int', s42: Float', s43: Int', s44: String', s45: Float', s46: Int', s47: Int'}
|           s36: Path s20._1.s24 : String'
|           s37: Path s20._1.s25 : Int'
|           s38: Path s20._1.s26 : Int'
|           s39: Path s20._1.s27 : Boolean'
|           s40: Path s20._1.s28 : String'
|           s41: Path s20._1.s29 : Int'
|           s42: Path s20._1.s30 : Float'
|           s43: Path s20._2.s31 : Int'
|           s44: Path s20._2.s32 : String'
|           s45: Path s20._2.s33 : Float'
|           s46: Path s20._2.s34 : Int'
|           s47: Path s20._2.s35 : Int'
|     where: Apply Function < : Boolean
|       0: Path s10.s38 : Int'
|       1: Path s10.s46 : Int'
|   select: Pure t17 : Vector[t17<{s48: String'}>]
|     value: StructNode : {s48: String'}
|       s48: Path s9.s44 : String'

10:05:28.367 [main] DEBUG slick.compiler.QueryCompiler - After phase rewriteJoins: (no change)
10:05:28.368 [main] DEBUG slick.compiler.QueryCompiler - After phase verifySymbols: (no change)
10:05:28.368 [main] DEBUG slick.compiler.QueryCompiler - After phase relabelUnions: (no change)
10:05:28.368 [main] DEBUG slick.compiler.QueryCompiler - After phase createAggregates: (no change)
10:05:28.368 [main] DEBUG slick.compiler.QueryCompiler - After phase resolveZipJoins: (no change)
10:05:28.379 [main] DEBUG slick.compiler.PruneProjections - Unreferenced: t17; Field refs: (@t16,CART_USER_ID), (t23,s31), (t23,s35), (t22,s30), (t22,s28), (t21,s38), (t23,s32), (@t16,CART_TOTAL), (@t14,PRODUCT_TYPE), (t21,s46), (t21,s44), (@t14,PRODUCT_ID), (t22,s24), (t23,s33), (t22,s27), (@t16,CART_PRODUCT_STATUS), (@t14,PRODUCT_PRICE), (@t16,CART_PRODUCT_QUANTITY), (t22,s26), (@t14,IS_DELETED), (@t14,PRODUCT_NAME), (t22,s29), (@t16,CART_ID), (t23,s34), (@t14,CART_PRODUCT_ID), (@t14,PRODUCT_QUANTITY), (t22,s25)
10:05:28.382 [main] DEBUG slick.compiler.QueryCompiler - After phase pruneProjections:
| Bind : Vector[t17<{s48: String'}>]
|   from s9: Filter s10 : Vector[t21<{s38: Int', s44: String', s46: Int'}>]
|     from s10: Bind : Vector[t21<{s38: Int', s44: String', s46: Int'}>]
|       from s20: Join Inner : Vector[(t22<{s24: String', s25: Int', s26: Int', s27: Boolean', s28: String', s29: Int', s30: Float'}>, t23<{s31: Int', s32: String', s33: Float', s34: Int', s35: Int'}>)]
|         left s11: Bind : Vector[t22<{s24: String', s25: Int', s26: Int', s27: Boolean', s28: String', s29: Int', s30: Float'}>]
|           from s18: Table PRODUCTS : Vector[@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]
|           select: Pure t22 : Vector[t22<{s24: String', s25: Int', s26: Int', s27: Boolean', s28: String', s29: Int', s30: Float'}>]
|             value: StructNode : {s24: String', s25: Int', s26: Int', s27: Boolean', s28: String', s29: Int', s30: Float'}
|               s24: Path s18.PRODUCT_NAME : String'
|               s25: Path s18.CART_PRODUCT_ID : Int'
|               s26: Path s18.PRODUCT_QUANTITY : Int'
|               s27: Path s18.IS_DELETED : Boolean'
|               s28: Path s18.PRODUCT_TYPE : String'
|               s29: Path s18.PRODUCT_ID : Int'
|               s30: Path s18.PRODUCT_PRICE : Float'
|         right s12: Bind : Vector[t23<{s31: Int', s32: String', s33: Float', s34: Int', s35: Int'}>]
|           from s19: Table CART : Vector[@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]
|           select: Pure t23 : Vector[t23<{s31: Int', s32: String', s33: Float', s34: Int', s35: Int'}>]
|             value: StructNode : {s31: Int', s32: String', s33: Float', s34: Int', s35: Int'}
|               s31: Path s19.CART_ID : Int'
|               s32: Path s19.CART_PRODUCT_STATUS : String'
|               s33: Path s19.CART_TOTAL : Float'
|               s34: Path s19.CART_PRODUCT_QUANTITY : Int'
|               s35: Path s19.CART_USER_ID : Int'
|         on: Apply Function = : Boolean
|           0: Path s11.s25 : Int'
|           1: Path s12.s31 : Int'
|       select: Pure t21 : Vector[t21<{s38: Int', s44: String', s46: Int'}>]
|         value: StructNode : {s38: Int', s44: String', s46: Int'}
|           s38: Path s20._1.s26 : Int'
|           s44: Path s20._2.s32 : String'
|           s46: Path s20._2.s34 : Int'
|     where: Apply Function < : Boolean
|       0: Path s10.s38 : Int'
|       1: Path s10.s46 : Int'
|   select: Pure t17 : Vector[t17<{s48: String'}>]
|     value: StructNode : {s48: String'}
|       s48: Path s9.s44 : String'

10:05:28.382 [main] DEBUG slick.compiler.RewriteDistinct - No DISTINCT used as determined by assignUniqueSymbols - skipping phase
10:05:28.382 [main] DEBUG slick.compiler.QueryCompiler - After phase rewriteDistinct: (no change)
10:05:28.382 [main] DEBUG s.compiler.CreateResultSetMapping - Creating mapping from t17<String'>
10:05:28.385 [main] DEBUG slick.compiler.QueryCompiler - After phase createResultSetMapping:
| ResultSetMapping : Vector[String']
|   from s49: Bind : Vector[t17<{s48: String'}>]
|     from s9: Filter s10 : Vector[t21<{s38: Int', s44: String', s46: Int'}>]
|       from s10: Bind : Vector[t21<{s38: Int', s44: String', s46: Int'}>]
|         from s20: Join Inner : Vector[(t22<{s24: String', s25: Int', s26: Int', s27: Boolean', s28: String', s29: Int', s30: Float'}>, t23<{s31: Int', s32: String', s33: Float', s34: Int', s35: Int'}>)]
|           left s11: Bind : Vector[t22<{s24: String', s25: Int', s26: Int', s27: Boolean', s28: String', s29: Int', s30: Float'}>]
|             from s18: Table PRODUCTS : Vector[@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]
|             select: Pure t22 : Vector[t22<{s24: String', s25: Int', s26: Int', s27: Boolean', s28: String', s29: Int', s30: Float'}>]
|               value: StructNode : {s24: String', s25: Int', s26: Int', s27: Boolean', s28: String', s29: Int', s30: Float'}
|                 s24: Path s18.PRODUCT_NAME : String'
|                 s25: Path s18.CART_PRODUCT_ID : Int'
|                 s26: Path s18.PRODUCT_QUANTITY : Int'
|                 s27: Path s18.IS_DELETED : Boolean'
|                 s28: Path s18.PRODUCT_TYPE : String'
|                 s29: Path s18.PRODUCT_ID : Int'
|                 s30: Path s18.PRODUCT_PRICE : Float'
|           right s12: Bind : Vector[t23<{s31: Int', s32: String', s33: Float', s34: Int', s35: Int'}>]
|             from s19: Table CART : Vector[@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]
|             select: Pure t23 : Vector[t23<{s31: Int', s32: String', s33: Float', s34: Int', s35: Int'}>]
|               value: StructNode : {s31: Int', s32: String', s33: Float', s34: Int', s35: Int'}
|                 s31: Path s19.CART_ID : Int'
|                 s32: Path s19.CART_PRODUCT_STATUS : String'
|                 s33: Path s19.CART_TOTAL : Float'
|                 s34: Path s19.CART_PRODUCT_QUANTITY : Int'
|                 s35: Path s19.CART_USER_ID : Int'
|           on: Apply Function = : Boolean
|             0: Path s11.s25 : Int'
|             1: Path s12.s31 : Int'
|         select: Pure t21 : Vector[t21<{s38: Int', s44: String', s46: Int'}>]
|           value: StructNode : {s38: Int', s44: String', s46: Int'}
|             s38: Path s20._1.s26 : Int'
|             s44: Path s20._2.s32 : String'
|             s46: Path s20._2.s34 : Int'
|       where: Apply Function < : Boolean
|         0: Path s10.s38 : Int'
|         1: Path s10.s46 : Int'
|     select: Pure t17 : Vector[t17<{s48: String'}>]
|       value: StructNode : {s48: String'}
|         s48: Path s9.s44 : String'
|   map: Path s49.s48 : String'

10:05:28.387 [main] DEBUG slick.compiler.HoistClientOps - Hoisting operations from Join:
| Join Inner : Vector[(t22<{s24: String', s25: Int', s26: Int', s27: Boolean', s28: String', s29: Int', s30: Float'}>, t23<{s31: Int', s32: String', s33: Float', s34: Int', s35: Int'}>)]
|   left s11: Bind : Vector[t22<{s24: String', s25: Int', s26: Int', s27: Boolean', s28: String', s29: Int', s30: Float'}>]
|     from s18: ...
|     select: Pure t22 : Vector[t22<{s24: String', s25: Int', s26: Int', s27: Boolean', s28: String', s29: Int', s30: Float'}>]
|       value: StructNode : {s24: String', s25: Int', s26: Int', s27: Boolean', s28: String', s29: Int', s30: Float'}
|         s24: Path s18.PRODUCT_NAME : String'
|         s25: Path s18.CART_PRODUCT_ID : Int'
|         s26: Path s18.PRODUCT_QUANTITY : Int'
|         s27: Path s18.IS_DELETED : Boolean'
|         s28: Path s18.PRODUCT_TYPE : String'
|         s29: Path s18.PRODUCT_ID : Int'
|         s30: Path s18.PRODUCT_PRICE : Float'
|   right s12: Bind : Vector[t23<{s31: Int', s32: String', s33: Float', s34: Int', s35: Int'}>]
|     from s19: ...
|     select: Pure t23 : Vector[t23<{s31: Int', s32: String', s33: Float', s34: Int', s35: Int'}>]
|       value: StructNode : {s31: Int', s32: String', s33: Float', s34: Int', s35: Int'}
|         s31: Path s19.CART_ID : Int'
|         s32: Path s19.CART_PRODUCT_STATUS : String'
|         s33: Path s19.CART_TOTAL : Float'
|         s34: Path s19.CART_PRODUCT_QUANTITY : Int'
|         s35: Path s19.CART_USER_ID : Int'
|   on: Apply Function = : Boolean
|     0: Path s11.s25 : Int'
|     1: Path s12.s31 : Int'

10:05:28.387 [main] DEBUG slick.compiler.HoistClientOps - Hoisting operations from defs in left side of Join: 
10:05:28.387 [main] DEBUG slick.compiler.HoistClientOps - New defs: HashMap(Path s18.PRODUCT_NAME -> s50, Path s18.CART_PRODUCT_ID -> s51, Path s18.PRODUCT_QUANTITY -> s52, Path s18.PRODUCT_ID -> s53, Path s18.PRODUCT_TYPE -> s54, Path s18.IS_DELETED -> s55, Path s18.PRODUCT_PRICE -> s56)
10:05:28.388 [main] DEBUG slick.compiler.HoistClientOps - Translated left join side:
| Bind : Vector[t57<{s50: String', s53: Int', s52: Int', s54: String', s55: Boolean', s56: Float', s51: Int'}>]
|   from s18: ...
|   select: Pure t57 : Vector[t57<{s50: String', s53: Int', s52: Int', s54: String', s55: Boolean', s56: Float', s51: Int'}>]
|     value: StructNode : {s50: String', s53: Int', s52: Int', s54: String', s55: Boolean', s56: Float', s51: Int'}
|       s50: Path s18.PRODUCT_NAME : String'
|       s53: Path s18.PRODUCT_ID : Int'
|       s52: Path s18.PRODUCT_QUANTITY : Int'
|       s54: Path s18.PRODUCT_TYPE : String'
|       s55: Path s18.IS_DELETED : Boolean'
|       s56: Path s18.PRODUCT_PRICE : Float'
|       s51: Path s18.CART_PRODUCT_ID : Int'

10:05:28.389 [main] DEBUG slick.compiler.HoistClientOps - Hoisting operations from defs in right side of Join: 
10:05:28.389 [main] DEBUG slick.compiler.HoistClientOps - New defs: HashMap(Path s19.CART_PRODUCT_STATUS -> s58, Path s19.CART_ID -> s59, Path s19.CART_PRODUCT_QUANTITY -> s60, Path s19.CART_TOTAL -> s61, Path s19.CART_USER_ID -> s62)
10:05:28.390 [main] DEBUG slick.compiler.HoistClientOps - Translated right join side:
| Bind : Vector[t63<{s62: Int', s61: Float', s59: Int', s60: Int', s58: String'}>]
|   from s19: ...
|   select: Pure t63 : Vector[t63<{s62: Int', s61: Float', s59: Int', s60: Int', s58: String'}>]
|     value: StructNode : {s62: Int', s61: Float', s59: Int', s60: Int', s58: String'}
|       s62: Path s19.CART_USER_ID : Int'
|       s61: Path s19.CART_TOTAL : Float'
|       s59: Path s19.CART_ID : Int'
|       s60: Path s19.CART_PRODUCT_QUANTITY : Int'
|       s58: Path s19.CART_PRODUCT_STATUS : String'

10:05:28.391 [main] DEBUG slick.compiler.HoistClientOps - from3
| Join Inner
|   left s11: Bind : Vector[t57<{s50: String', s53: Int', s52: Int', s54: String', s55: Boolean', s56: Float', s51: Int'}>]
|     from s18: Table PRODUCTS : Vector[@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]
|     select: Pure t57 : Vector[t57<{s50: String', s53: Int', s52: Int', s54: String', s55: Boolean', s56: Float', s51: Int'}>]
|       value: StructNode : {s50: String', s53: Int', s52: Int', s54: String', s55: Boolean', s56: Float', s51: Int'}
|         s50: Path s18.PRODUCT_NAME : String'
|         s53: Path s18.PRODUCT_ID : Int'
|         s52: Path s18.PRODUCT_QUANTITY : Int'
|         s54: Path s18.PRODUCT_TYPE : String'
|         s55: Path s18.IS_DELETED : Boolean'
|         s56: Path s18.PRODUCT_PRICE : Float'
|         s51: Path s18.CART_PRODUCT_ID : Int'
|   right s12: Bind : Vector[t63<{s62: Int', s61: Float', s59: Int', s60: Int', s58: String'}>]
|     from s19: Table CART : Vector[@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]
|     select: Pure t63 : Vector[t63<{s62: Int', s61: Float', s59: Int', s60: Int', s58: String'}>]
|       value: StructNode : {s62: Int', s61: Float', s59: Int', s60: Int', s58: String'}
|         s62: Path s19.CART_USER_ID : Int'
|         s61: Path s19.CART_TOTAL : Float'
|         s59: Path s19.CART_ID : Int'
|         s60: Path s19.CART_PRODUCT_QUANTITY : Int'
|         s58: Path s19.CART_PRODUCT_STATUS : String'
|   on: Apply Function =
|     0: Path s11.s51
|     1: Path s12.s59

10:05:28.392 [main] DEBUG slick.compiler.HoistClientOps - sel2
| Pure t21
|   value: StructNode
|     s38: Path s20._1.s52
|     s44: Path s20._2.s58
|     s46: Path s20._2.s60

10:05:28.393 [main] DEBUG slick.compiler.HoistClientOps - Pulling Bind out of Filter
| Filter s10
|   from s10: Bind : Vector[t21<{s38: Int', s44: String', s46: Int'}>]
|     from s20: ...
|     select: Pure t21 : Vector[t21<{s38: Int', s44: String', s46: Int'}>]
|       value: StructNode : {s38: Int', s44: String', s46: Int'}
|         s38: Path s20._1.s52 : Int'
|         s44: Path s20._2.s58 : String'
|         s46: Path s20._2.s60 : Int'
|   where: Apply Function < : Boolean
|     0: Path s10.s38 : Int'
|     1: Path s10.s46 : Int'

10:05:28.394 [main] DEBUG slick.compiler.HoistClientOps - Pulled Bind out of Filter
| Bind
|   from s20: Filter s64
|     from s64: ...
|     where: Apply Function <
|       0: Path s64._1.s52
|       1: Path s64._2.s60
|   select: Pure t21
|     value: StructNode
|       s38: Path s20._1.s52
|       s44: Path s20._2.s58
|       s46: Path s20._2.s60

10:05:28.395 [main] DEBUG slick.compiler.HoistClientOps - Merging top-level Binds
| Bind
|   from s9: Bind : Vector[t21<{s38: Int', s44: String', s46: Int'}>]
|     from s20: ...
|     select: Pure t21 : Vector[t21<{s38: Int', s44: String', s46: Int'}>]
|       value: StructNode : {s38: Int', s44: String', s46: Int'}
|         s38: Path s20._1.s52 : Int'
|         s44: Path s20._2.s58 : String'
|         s46: Path s20._2.s60 : Int'
|   select: Pure t17 : Vector[t17<{s48: String'}>]
|     value: StructNode : {s48: String'}
|       s48: Path s9.s44 : String'

10:05:28.395 [main] DEBUG slick.compiler.HoistClientOps - Hoisting operations from defs: 
10:05:28.395 [main] DEBUG slick.compiler.HoistClientOps - New defs: Map(0 -> (Path s20._2.s58,s65))
10:05:28.397 [main] DEBUG slick.compiler.HoistClientOps - New ResultSetMapping:
| ResultSetMapping : Vector[String']
|   from s49: Bind : Vector[t66<{s65: String'}>]
|     from s20: ...
|     select: Pure t66 : Vector[t66<{s65: String'}>]
|       value: StructNode : {s65: String'}
|         s65: Path s20._2.s58 : String'
|   map: Path s49.s65 : String'

10:05:28.399 [main] DEBUG slick.compiler.QueryCompiler - After phase hoistClientOps:
| ResultSetMapping : Vector[String']
|   from s49: Bind : Vector[t66<{s65: String'}>]
|     from s20: Filter s64 : Vector[(t57<{s50: String', s53: Int', s52: Int', s54: String', s55: Boolean', s56: Float', s51: Int'}>, t63<{s62: Int', s61: Float', s59: Int', s60: Int', s58: String'}>)]
|       from s64: Join Inner : Vector[(t57<{s50: String', s53: Int', s52: Int', s54: String', s55: Boolean', s56: Float', s51: Int'}>, t63<{s62: Int', s61: Float', s59: Int', s60: Int', s58: String'}>)]
|         left s11: Bind : Vector[t57<{s50: String', s53: Int', s52: Int', s54: String', s55: Boolean', s56: Float', s51: Int'}>]
|           from s18: Table PRODUCTS : Vector[@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]
|           select: Pure t57 : Vector[t57<{s50: String', s53: Int', s52: Int', s54: String', s55: Boolean', s56: Float', s51: Int'}>]
|             value: StructNode : {s50: String', s53: Int', s52: Int', s54: String', s55: Boolean', s56: Float', s51: Int'}
|               s50: Path s18.PRODUCT_NAME : String'
|               s53: Path s18.PRODUCT_ID : Int'
|               s52: Path s18.PRODUCT_QUANTITY : Int'
|               s54: Path s18.PRODUCT_TYPE : String'
|               s55: Path s18.IS_DELETED : Boolean'
|               s56: Path s18.PRODUCT_PRICE : Float'
|               s51: Path s18.CART_PRODUCT_ID : Int'
|         right s12: Bind : Vector[t63<{s62: Int', s61: Float', s59: Int', s60: Int', s58: String'}>]
|           from s19: Table CART : Vector[@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]
|           select: Pure t63 : Vector[t63<{s62: Int', s61: Float', s59: Int', s60: Int', s58: String'}>]
|             value: StructNode : {s62: Int', s61: Float', s59: Int', s60: Int', s58: String'}
|               s62: Path s19.CART_USER_ID : Int'
|               s61: Path s19.CART_TOTAL : Float'
|               s59: Path s19.CART_ID : Int'
|               s60: Path s19.CART_PRODUCT_QUANTITY : Int'
|               s58: Path s19.CART_PRODUCT_STATUS : String'
|         on: Apply Function = : Boolean
|           0: Path s11.s51 : Int'
|           1: Path s12.s59 : Int'
|       where: Apply Function < : Boolean
|         0: Path s64._1.s52 : Int'
|         1: Path s64._2.s60 : Int'
|     select: Pure t66 : Vector[t66<{s65: String'}>]
|       value: StructNode : {s65: String'}
|         s65: Path s20._2.s58 : String'
|   map: Path s49.s65 : String'

10:05:28.399 [main] DEBUG slick.compiler.QueryCompiler - After phase reorderOperations: (no change)
10:05:28.399 [main] DEBUG slick.compiler.MergeToComprehensions - Table fields: MapView(<not computed>)
10:05:28.401 [main] DEBUG slick.compiler.MergeToComprehensions - Creating source from Join s11/s12:
| Join Inner : Vector[(t57<{s50: String', s53: Int', s52: Int', s54: String', s55: Boolean', s56: Float', s51: Int'}>, t63<{s62: Int', s61: Float', s59: Int', s60: Int', s58: String'}>)]
|   left s11: Bind : Vector[t57<{s50: String', s53: Int', s52: Int', s54: String', s55: Boolean', s56: Float', s51: Int'}>]
|     from s18: Table PRODUCTS : Vector[@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]
|     select: Pure t57 : Vector[t57<{s50: String', s53: Int', s52: Int', s54: String', s55: Boolean', s56: Float', s51: Int'}>]
|       value: StructNode : {s50: String', s53: Int', s52: Int', s54: String', s55: Boolean', s56: Float', s51: Int'}
|         s50: Path s18.PRODUCT_NAME : String'
|         s53: Path s18.PRODUCT_ID : Int'
|         s52: Path s18.PRODUCT_QUANTITY : Int'
|         s54: Path s18.PRODUCT_TYPE : String'
|         s55: Path s18.IS_DELETED : Boolean'
|         s56: Path s18.PRODUCT_PRICE : Float'
|         s51: Path s18.CART_PRODUCT_ID : Int'
|   right s12: Bind : Vector[t63<{s62: Int', s61: Float', s59: Int', s60: Int', s58: String'}>]
|     from s19: Table CART : Vector[@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]
|     select: Pure t63 : Vector[t63<{s62: Int', s61: Float', s59: Int', s60: Int', s58: String'}>]
|       value: StructNode : {s62: Int', s61: Float', s59: Int', s60: Int', s58: String'}
|         s62: Path s19.CART_USER_ID : Int'
|         s61: Path s19.CART_TOTAL : Float'
|         s59: Path s19.CART_ID : Int'
|         s60: Path s19.CART_PRODUCT_QUANTITY : Int'
|         s58: Path s19.CART_PRODUCT_STATUS : String'
|   on: Apply Function = : Boolean
|     0: Path s11.s51 : Int'
|     1: Path s12.s59 : Int'

10:05:28.401 [main] DEBUG slick.compiler.MergeToComprehensions - Bind from s18 is aliasing: true
10:05:28.401 [main] DEBUG slick.compiler.MergeToComprehensions - Creating source from TableNode:
| Table PRODUCTS : Vector[@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]

10:05:28.401 [main] DEBUG slick.compiler.MergeToComprehensions - Mappings are: ConstArray(((@t14,PRODUCT_NAME),List(PRODUCT_NAME)), ((@t14,PRODUCT_ID),List(PRODUCT_ID)), ((@t14,PRODUCT_QUANTITY),List(PRODUCT_QUANTITY)), ((@t14,PRODUCT_TYPE),List(PRODUCT_TYPE)), ((@t14,IS_DELETED),List(IS_DELETED)), ((@t14,PRODUCT_PRICE),List(PRODUCT_PRICE)), ((@t14,CART_PRODUCT_ID),List(CART_PRODUCT_ID)))
10:05:28.401 [main] DEBUG slick.compiler.MergeToComprehensions - Recombining aliasing Bind mappings ConstArray((s50,Path s18.PRODUCT_NAME), (s53,Path s18.PRODUCT_ID), (s52,Path s18.PRODUCT_QUANTITY), (s54,Path s18.PRODUCT_TYPE), (s55,Path s18.IS_DELETED), (s56,Path s18.PRODUCT_PRICE), (s51,Path s18.CART_PRODUCT_ID))
10:05:28.401 [main] DEBUG slick.compiler.MergeToComprehensions - Bind from s19 is aliasing: true
10:05:28.402 [main] DEBUG slick.compiler.MergeToComprehensions - Creating source from TableNode:
| Table CART : Vector[@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]

10:05:28.402 [main] DEBUG slick.compiler.MergeToComprehensions - Mappings are: ConstArray(((@t16,CART_USER_ID),List(CART_USER_ID)), ((@t16,CART_TOTAL),List(CART_TOTAL)), ((@t16,CART_ID),List(CART_ID)), ((@t16,CART_PRODUCT_QUANTITY),List(CART_PRODUCT_QUANTITY)), ((@t16,CART_PRODUCT_STATUS),List(CART_PRODUCT_STATUS)))
10:05:28.402 [main] DEBUG slick.compiler.MergeToComprehensions - Recombining aliasing Bind mappings ConstArray((s62,Path s19.CART_USER_ID), (s61,Path s19.CART_TOTAL), (s59,Path s19.CART_ID), (s60,Path s19.CART_PRODUCT_QUANTITY), (s58,Path s19.CART_PRODUCT_STATUS))
10:05:28.402 [main] DEBUG slick.compiler.MergeToComprehensions - Converted left side of Join s11/s12:
| Table PRODUCTS : Vector[@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]

10:05:28.402 [main] DEBUG slick.compiler.MergeToComprehensions - Converted right side of Join s11/s12:
| Table CART : Vector[@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]

10:05:28.403 [main] DEBUG slick.compiler.MergeToComprehensions - Mappings for `on` clause in Join s11/s12: HashMap((t63,s59) -> List(_2, CART_ID), (t57,s50) -> List(_1, PRODUCT_NAME), (t57,s56) -> List(_1, PRODUCT_PRICE), (t63,s58) -> List(_2, CART_PRODUCT_STATUS), (t63,s61) -> List(_2, CART_TOTAL), (t57,s53) -> List(_1, PRODUCT_ID), (t63,s60) -> List(_2, CART_PRODUCT_QUANTITY), (t57,s54) -> List(_1, PRODUCT_TYPE), (t57,s55) -> List(_1, IS_DELETED), (t57,s52) -> List(_1, PRODUCT_QUANTITY), (t57,s51) -> List(_1, CART_PRODUCT_ID), (t63,s62) -> List(_2, CART_USER_ID))
10:05:28.403 [main] DEBUG slick.compiler.MergeToComprehensions - Transformed `on` clause in Join s11/s12:
| Apply Function = : Boolean
|   0: Path s11.CART_PRODUCT_ID : Int'
|   1: Path s12.CART_ID : Int'

10:05:28.404 [main] DEBUG slick.compiler.MergeToComprehensions - Created source from Join s11/s12:
| Join Inner : Vector[(@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>, @t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>)]
|   left s11: Table PRODUCTS : Vector[@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]
|   right s12: Table CART : Vector[@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]
|   on: Apply Function = : Boolean
|     0: Path s11.CART_PRODUCT_ID : Int'
|     1: Path s12.CART_ID : Int'

10:05:28.405 [main] DEBUG slick.compiler.MergeToComprehensions - Building new Comprehension from:
| Join Inner : Vector[(@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>, @t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>)]
|   left s11: Table PRODUCTS : Vector[@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]
|   right s12: Table CART : Vector[@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]
|   on: Apply Function = : Boolean
|     0: Path s11.CART_PRODUCT_ID : Int'
|     1: Path s12.CART_ID : Int'

10:05:28.406 [main] DEBUG slick.compiler.MergeToComprehensions - Built new Comprehension:
| Comprehension s67, None, None, ConstArray(), None, None, None, None, false : Vector[t68<{s69: String', s70: Int', s71: Int', s72: String', s73: Boolean', s74: Float', s75: Int', s76: Int', s77: Float', s78: Int', s79: Int', s80: String'}>]
|   from s67: Join Inner : Vector[(@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>, @t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>)]
|     left s11: Table PRODUCTS : Vector[@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]
|     right s12: Table CART : Vector[@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]
|     on: Apply Function = : Boolean
|       0: Path s11.CART_PRODUCT_ID : Int'
|       1: Path s12.CART_ID : Int'
|   select: Pure t68 : Vector[t68<{s69: String', s70: Int', s71: Int', s72: String', s73: Boolean', s74: Float', s75: Int', s76: Int', s77: Float', s78: Int', s79: Int', s80: String'}>]
|     value: StructNode : {s69: String', s70: Int', s71: Int', s72: String', s73: Boolean', s74: Float', s75: Int', s76: Int', s77: Float', s78: Int', s79: Int', s80: String'}
|       s69: Path s67._1.PRODUCT_NAME : String'
|       s70: Path s67._1.PRODUCT_ID : Int'
|       s71: Path s67._1.PRODUCT_QUANTITY : Int'
|       s72: Path s67._1.PRODUCT_TYPE : String'
|       s73: Path s67._1.IS_DELETED : Boolean'
|       s74: Path s67._1.PRODUCT_PRICE : Float'
|       s75: Path s67._1.CART_PRODUCT_ID : Int'
|       s76: Path s67._2.CART_USER_ID : Int'
|       s77: Path s67._2.CART_TOTAL : Float'
|       s78: Path s67._2.CART_ID : Int'
|       s79: Path s67._2.CART_PRODUCT_QUANTITY : Int'
|       s80: Path s67._2.CART_PRODUCT_STATUS : String'

10:05:28.406 [main] DEBUG slick.compiler.MergeToComprehensions - Replacements are: HashMap((t63,s59) -> s78, (t57,s50) -> s69, (t57,s56) -> s74, (t63,s58) -> s80, (t63,s61) -> s77, (t57,s53) -> s70, (t63,s60) -> s79, (t57,s54) -> s72, (t57,s55) -> s73, (t57,s52) -> s71, (t57,s51) -> s75, (t63,s62) -> s76)
10:05:28.407 [main] DEBUG slick.compiler.MergeToComprehensions - Merging Filter into Comprehension:
| Filter s64 : Vector[(t57<{s50: String', s53: Int', s52: Int', s54: String', s55: Boolean', s56: Float', s51: Int'}>, t63<{s62: Int', s61: Float', s59: Int', s60: Int', s58: String'}>)]
|   from s64: ...
|   where: Apply Function < : Boolean
|     0: Path s64._1.s52 : Int'
|     1: Path s64._2.s60 : Int'

10:05:28.409 [main] DEBUG slick.compiler.MergeToComprehensions - Merged Filter into Comprehension:
| Comprehension s67, Some(Apply Function <), None, ConstArray(), None, None, None, None, false : Vector[t68<{s69: String', s70: Int', s71: Int', s72: String', s73: Boolean', s74: Float', s75: Int', s76: Int', s77: Float', s78: Int', s79: Int', s80: String'}>]
|   from s67: Join Inner : Vector[(@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>, @t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>)]
|     left s11: Table PRODUCTS : Vector[@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]
|     right s12: Table CART : Vector[@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]
|     on: Apply Function = : Boolean
|       0: Path s11.CART_PRODUCT_ID : Int'
|       1: Path s12.CART_ID : Int'
|   select: Pure t68 : Vector[t68<{s69: String', s70: Int', s71: Int', s72: String', s73: Boolean', s74: Float', s75: Int', s76: Int', s77: Float', s78: Int', s79: Int', s80: String'}>]
|     value: StructNode : {s69: String', s70: Int', s71: Int', s72: String', s73: Boolean', s74: Float', s75: Int', s76: Int', s77: Float', s78: Int', s79: Int', s80: String'}
|       s69: Path s67._1.PRODUCT_NAME : String'
|       s70: Path s67._1.PRODUCT_ID : Int'
|       s71: Path s67._1.PRODUCT_QUANTITY : Int'
|       s72: Path s67._1.PRODUCT_TYPE : String'
|       s73: Path s67._1.IS_DELETED : Boolean'
|       s74: Path s67._1.PRODUCT_PRICE : Float'
|       s75: Path s67._1.CART_PRODUCT_ID : Int'
|       s76: Path s67._2.CART_USER_ID : Int'
|       s77: Path s67._2.CART_TOTAL : Float'
|       s78: Path s67._2.CART_ID : Int'
|       s79: Path s67._2.CART_PRODUCT_QUANTITY : Int'
|       s80: Path s67._2.CART_PRODUCT_STATUS : String'
|   where: Apply Function < : Boolean
|     0: Path s67._1.PRODUCT_QUANTITY : Int'
|     1: Path s67._2.CART_PRODUCT_QUANTITY : Int'

10:05:28.409 [main] DEBUG slick.compiler.MergeToComprehensions - Merging Bind into Comprehension as 'select':
| Bind : Vector[t66<{s65: String'}>]
|   from s20: ...
|   select: Pure t66 : Vector[t66<{s65: String'}>]
|     value: StructNode : {s65: String'}
|       s65: Path s20._2.s58 : String'

10:05:28.411 [main] DEBUG slick.compiler.MergeToComprehensions - Merged Bind into Comprehension as 'select':
| Comprehension s67, Some(Apply Function <), None, ConstArray(), None, None, None, None, false : Vector[t66<{s65: String'}>]
|   from s67: Join Inner : Vector[(@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>, @t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>)]
|     left s11: Table PRODUCTS : Vector[@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]
|     right s12: Table CART : Vector[@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]
|     on: Apply Function = : Boolean
|       0: Path s11.CART_PRODUCT_ID : Int'
|       1: Path s12.CART_ID : Int'
|   select: Pure t66 : Vector[t66<{s65: String'}>]
|     value: StructNode : {s65: String'}
|       s65: Path s67._2.CART_PRODUCT_STATUS : String'
|   where: Apply Function < : Boolean
|     0: Path s67._1.PRODUCT_QUANTITY : Int'
|     1: Path s67._2.CART_PRODUCT_QUANTITY : Int'

10:05:28.411 [main] DEBUG slick.compiler.MergeToComprehensions - Replacements are: Map((t66,s65) -> s65)
10:05:28.411 [main] DEBUG slick.compiler.MergeToComprehensions - Mappings are: ConstArray(((t66,s65),List(s65)))
10:05:28.412 [main] DEBUG slick.compiler.QueryCompiler - After phase mergeToComprehensions:
| ResultSetMapping : Vector[String']
|   from s49: Comprehension s67, Some(Apply Function <), None, ConstArray(), None, None, None, None, false : Vector[t66<{s65: String'}>]
|     from s67: Join Inner : Vector[(@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>, @t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>)]
|       left s11: Table PRODUCTS : Vector[@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]
|       right s12: Table CART : Vector[@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]
|       on: Apply Function = : Boolean
|         0: Path s11.CART_PRODUCT_ID : Int'
|         1: Path s12.CART_ID : Int'
|     select: Pure t66 : Vector[t66<{s65: String'}>]
|       value: StructNode : {s65: String'}
|         s65: Path s67._2.CART_PRODUCT_STATUS : String'
|     where: Apply Function < : Boolean
|       0: Path s67._1.PRODUCT_QUANTITY : Int'
|       1: Path s67._2.CART_PRODUCT_QUANTITY : Int'
|   map: Path s49.s65 : String'

10:05:28.413 [main] DEBUG slick.compiler.QueryCompiler - After phase optimizeScalar: (no change)
10:05:28.413 [main] DEBUG slick.compiler.RemoveFieldNames - Required symbols: s65 -> 0
10:05:28.415 [main] DEBUG slick.compiler.RemoveFieldNames - Transformed RSM: 
| ResultSetMapping
|   from s49: Comprehension s67, Some(Apply Function <), None, ConstArray(), None, None, None, None, false : Vector[t66<(String')>]
|     from s67: Join Inner : Vector[(@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>, @t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>)]
|       left s11: Table PRODUCTS : Vector[@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]
|       right s12: Table CART : Vector[@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]
|       on: Apply Function = : Boolean
|         0: Path s11.CART_PRODUCT_ID : Int'
|         1: Path s12.CART_ID : Int'
|     select: Pure t66 : Vector[t66<(String')>]
|       value: ProductNode : (String')
|         1: Path s67._2.CART_PRODUCT_STATUS : String'
|     where: Apply Function < : Boolean
|       0: Path s67._1.PRODUCT_QUANTITY : Int'
|       1: Path s67._2.CART_PRODUCT_QUANTITY : Int'
|   map: Path s49.s65 : String'

10:05:28.416 [main] DEBUG slick.compiler.QueryCompiler - After phase removeFieldNames:
| ResultSetMapping : Vector[String']
|   from s49: Comprehension s67, Some(Apply Function <), None, ConstArray(), None, None, None, None, false : Vector[t66<(String')>]
|     from s67: Join Inner : Vector[(@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>, @t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>)]
|       left s11: Table PRODUCTS : Vector[@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]
|       right s12: Table CART : Vector[@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]
|       on: Apply Function = : Boolean
|         0: Path s11.CART_PRODUCT_ID : Int'
|         1: Path s12.CART_ID : Int'
|     select: Pure t66 : Vector[t66<(String')>]
|       value: ProductNode : (String')
|         1: Path s67._2.CART_PRODUCT_STATUS : String'
|     where: Apply Function < : Boolean
|       0: Path s67._1.PRODUCT_QUANTITY : Int'
|       1: Path s67._2.CART_PRODUCT_QUANTITY : Int'
|   map: Path s49._1 : String'

10:05:28.417 [main] DEBUG slick.compiler.CodeGen - Compiling server-side and mapping with server-side:
| Comprehension s67, Some(Apply Function <), None, ConstArray(), None, None, None, None, false : Vector[t66<(String')>]
|   from s67: Join Inner : Vector[(@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>, @t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>)]
|     left s11: Table PRODUCTS : Vector[@t14<{PRODUCT_NAME: String', CART_PRODUCT_ID: Int', PRODUCT_QUANTITY: Int', IS_DELETED: Boolean', PRODUCT_TYPE: String', PRODUCT_ID: Int', PRODUCT_PRICE: Float'}>]
|     right s12: Table CART : Vector[@t16<{CART_ID: Int', CART_PRODUCT_STATUS: String', CART_TOTAL: Float', CART_PRODUCT_QUANTITY: Int', CART_USER_ID: Int'}>]
|     on: Apply Function = : Boolean
|       0: Path s11.CART_PRODUCT_ID : Int'
|       1: Path s12.CART_ID : Int'
|   select: Pure t66 : Vector[t66<(String')>]
|     value: ProductNode : (String')
|       1: Path s67._2.CART_PRODUCT_STATUS : String'
|   where: Apply Function < : Boolean
|     0: Path s67._1.PRODUCT_QUANTITY : Int'
|     1: Path s67._2.CART_PRODUCT_QUANTITY : Int'

10:05:28.418 [main] DEBUG s.relational.ResultConverterCompiler - Compiled ResultConverter
| SpecializedJdbcResultConverter$$anon$1 idx=1, name=<computed> : String'

10:05:28.418 [main] DEBUG slick.compiler.CodeGen - Compiled server-side to:
| CompiledStatement "select s12.`CART_PRODUCT_STATUS` from `PRODUCTS` s11, `CART` s12 where (s11.`PRODUCT_QUANTITY` < s12.`CART_PRODUCT_QUANTITY`) and (s11.`CART_PRODUCT_ID` = s12.`CART_ID`)" : Vector[t66<(String')>]

10:05:28.419 [main] DEBUG slick.compiler.QueryCompiler - After phase codeGen:
| ResultSetMapping : Vector[String']
|   from s49: CompiledStatement "select s12.`CART_PRODUCT_STATUS` from `PRODUCTS` s11, `CART` s12 where (s11.`PRODUCT_QUANTITY` < s12.`CART_PRODUCT_QUANTITY`) and (s11.`CART_PRODUCT_ID` = s12.`CART_ID`)" : Vector[t66<(String')>]
|   map: CompiledMapping : String'
|     converter: SpecializedJdbcResultConverter$$anon$1 idx=1, name=<computed> : String'

10:05:28.419 [main] DEBUG s.compiler.QueryCompilerBenchmark - ------------------- Phase: Time ---------
10:05:28.419 [main] DEBUG s.compiler.QueryCompilerBenchmark -       assignUniqueSymbols:    3.226804 ms
10:05:28.420 [main] DEBUG s.compiler.QueryCompilerBenchmark -           unrollTailBinds:    0.339513 ms
10:05:28.420 [main] DEBUG s.compiler.QueryCompilerBenchmark -                inferTypes:    0.401653 ms
10:05:28.420 [main] DEBUG s.compiler.QueryCompilerBenchmark -              expandTables:    4.948778 ms
10:05:28.420 [main] DEBUG s.compiler.QueryCompilerBenchmark -           forceOuterBinds:    3.574526 ms
10:05:28.420 [main] DEBUG s.compiler.QueryCompilerBenchmark -         removeMappedTypes:    0.762403 ms
10:05:28.420 [main] DEBUG s.compiler.QueryCompilerBenchmark -                expandSums:    0.060023 ms
10:05:28.420 [main] DEBUG s.compiler.QueryCompilerBenchmark -         emulateOuterJoins:    0.204105 ms
10:05:28.421 [main] DEBUG s.compiler.QueryCompilerBenchmark -             expandRecords:    5.561556 ms
10:05:28.421 [main] DEBUG s.compiler.QueryCompilerBenchmark -        flattenProjections:   23.577980 ms
10:05:28.421 [main] DEBUG s.compiler.QueryCompilerBenchmark -              rewriteJoins:    0.332951 ms
10:05:28.421 [main] DEBUG s.compiler.QueryCompilerBenchmark -             verifySymbols:    0.405787 ms
10:05:28.421 [main] DEBUG s.compiler.QueryCompilerBenchmark -             relabelUnions:    0.283814 ms
10:05:28.421 [main] DEBUG s.compiler.QueryCompilerBenchmark -          createAggregates:    0.058022 ms
10:05:28.421 [main] DEBUG s.compiler.QueryCompilerBenchmark -           resolveZipJoins:    0.262766 ms
10:05:28.422 [main] DEBUG s.compiler.QueryCompilerBenchmark -          pruneProjections:   13.471670 ms
10:05:28.422 [main] DEBUG s.compiler.QueryCompilerBenchmark -           rewriteDistinct:    0.087103 ms
10:05:28.422 [main] DEBUG s.compiler.QueryCompilerBenchmark -    createResultSetMapping:    2.989921 ms
10:05:28.422 [main] DEBUG s.compiler.QueryCompilerBenchmark -            hoistClientOps:   13.847179 ms
10:05:28.422 [main] DEBUG s.compiler.QueryCompilerBenchmark -         reorderOperations:    0.205594 ms
10:05:28.422 [main] DEBUG s.compiler.QueryCompilerBenchmark -     mergeToComprehensions:   13.716985 ms
10:05:28.422 [main] DEBUG s.compiler.QueryCompilerBenchmark -            optimizeScalar:    0.164225 ms
10:05:28.422 [main] DEBUG s.compiler.QueryCompilerBenchmark -          removeFieldNames:    3.160849 ms
10:05:28.423 [main] DEBUG s.compiler.QueryCompilerBenchmark -                   codeGen:    3.036512 ms
10:05:28.423 [main] DEBUG s.compiler.QueryCompilerBenchmark -                     TOTAL:   94.680719 ms
10:05:28.423 [main] DEBUG slick.basic.BasicBackend.action - #1: result [select s12.`CART_PRODUCT_STATUS` from `PRODUCTS` s11, `CART` s12 where (s11.`PRODUCT_QUANTITY` < s12.`CART_PRODUCT_QUANTITY`) and (s11.`CART_PRODUCT_ID` = s12.`CART_ID`)]
10:05:28.434 [mydb-2] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: select s12.`CART_PRODUCT_STATUS` from `PRODUCTS` s11, `CART` s12 where (s11.`PRODUCT_QUANTITY` < s12.`CART_PRODUCT_QUANTITY`) and (s11.`CART_PRODUCT_ID` = s12.`CART_ID`)
10:05:28.434 [mydb-2] DEBUG slick.jdbc.JdbcBackend.statement - Executing prepared statement: com.mysql.cj.jdbc.ClientPreparedStatement: select s12.`CART_PRODUCT_STATUS` from `PRODUCTS` s11, `CART` s12 where (s11.`PRODUCT_QUANTITY` < s12.`CART_PRODUCT_QUANTITY`) and (s11.`CART_PRODUCT_ID` = s12.`CART_ID`)
10:05:28.434 [mydb-2] DEBUG s.j.J.statementAndParameter - Executing prepared statement: com.mysql.cj.jdbc.ClientPreparedStatement: select s12.`CART_PRODUCT_STATUS` from `PRODUCTS` s11, `CART` s12 where (s11.`PRODUCT_QUANTITY` < s12.`CART_PRODUCT_QUANTITY`) and (s11.`CART_PRODUCT_ID` = s12.`CART_ID`)
10:05:28.438 [mydb-2] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 3ms
10:05:28.438 [mydb-2] DEBUG slick.jdbc.StatementInvoker.result - /---------------------\
10:05:28.438 [mydb-2] DEBUG slick.jdbc.StatementInvoker.result - | 1                   |
10:05:28.438 [mydb-2] DEBUG slick.jdbc.StatementInvoker.result - | CART_PRODUCT_STATUS |
10:05:28.438 [mydb-2] DEBUG slick.jdbc.StatementInvoker.result - |---------------------|
10:05:28.438 [mydb-2] DEBUG slick.jdbc.StatementInvoker.result - | In stock            |
10:05:28.438 [mydb-2] DEBUG slick.jdbc.StatementInvoker.result - \---------------------/
